(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-9894f1fe"],{"0627":function(e){e.exports=JSON.parse("[]")},"10ee":function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lqtyTokenAddress","type":"address"}],"name":"LQTYTokenAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"reward","type":"uint256"}],"name":"RewardPaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Staked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_uniTokenAddress","type":"address"}],"name":"UniTokenAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claimReward","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"duration","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"earned","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastTimeRewardApplicable","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastUpdateTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lqtyToken","outputs":[{"internalType":"contract ILQTYToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"periodFinish","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardPerToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardPerTokenStored","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rewardRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewards","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lqtyTokenAddress","type":"address"},{"internalType":"address","name":"_uniTokenAddress","type":"address"},{"internalType":"uint256","name":"_duration","type":"uint256"}],"name":"setParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"uniToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"userRewardPerTokenPaid","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"withdrawAndClaim","outputs":[],"stateMutability":"nonpayable","type":"function"}]')},2589:function(e){e.exports=JSON.parse('{"chainId":1,"version":"5174ecd0da4842157aba989499200d690b7e374f","deploymentDate":1617611590000,"bootstrapPeriod":1209600,"totalStabilityPoolLQTYReward":"32000000","liquidityMiningLQTYRewardRate":"0.367430922986478542","_priceFeedIsTestnet":false,"_uniTokenIsMock":false,"_isDev":false,"addresses":{"activePool":"0xDf9Eb223bAFBE5c5271415C75aeCD68C21fE3D7F","borrowerOperations":"0x24179CD81c9e782A4096035f7eC97fB8B783e007","troveManager":"0xA39739EF8b0231DbFA0DcdA07d7e29faAbCf4bb2","collSurplusPool":"0x3D32e8b97Ed5881324241Cf03b2DA5E2EBcE5521","communityIssuance":"0xD8c9D9071123a059C6E0A945cF0e0c82b508d816","defaultPool":"0x896a3F03176f05CFbb4f006BfCd8723F2B0D741C","hintHelpers":"0xE84251b93D9524E0d2e621Ba7dc7cb3579F997C0","lockupContractFactory":"0x2eBeF24dA09489218Ba2BECb01867F6DaAeDcD4B","lqtyStaking":"0x4f9Fbb3f1E99B56e0Fe2892e623Ed36A76Fc605d","priceFeed":"0x4c517D4e2C851CA76d7eC94B805269Df0f2201De","sortedTroves":"0x8FdD3fbFEb32b28fb73555518f8b361bCeA741A6","stabilityPool":"0x66017D22b0f8556afDd19FC67041899Eb65a21bb","gasPool":"0x9555b042F969E561855e5F28cB1230819149A8d9","unipool":"0xd37a77E71ddF3373a79BE2eBB76B6c4808bDF0d5","lusdToken":"0x5f98805A4E8be255a32880FDeC7F6728C6568bA0","lqtyToken":"0x6DEA81C8171D0bA574754EF6F8b412F2Ed88c54D","multiTroveGetter":"0xFc92d0E9Fa35df17E3A6d9F40716ca2cE749922B","uniToken":"0xF20EF17b889b437C151eB5bA15A47bFc62bfF469"}}')},"2a71":function(e){e.exports=JSON.parse('{"chainId":5,"version":"5174ecd0da4842157aba989499200d690b7e374f","deploymentDate":1617356502000,"bootstrapPeriod":1209600,"totalStabilityPoolLQTYReward":"32000000","liquidityMiningLQTYRewardRate":"0.257201646090534979","_priceFeedIsTestnet":true,"_uniTokenIsMock":false,"_isDev":false,"addresses":{"activePool":"0x5948018DEeC14642E6127c5a3AC4081798bB73d8","borrowerOperations":"0xa36bA16411AF139737E8E345Cd9422a47856bECa","troveManager":"0x964Ef77E870db852BAc7928D860dA44c2B36e753","collSurplusPool":"0x31b517f122Db8e8bC95D2666dF4818622187aFC8","communityIssuance":"0xba8B1775f2f75D195A0d6F987E519FeA8A972421","defaultPool":"0x9aC8F88bB2C10DBF05848b0a7C62A216356135Fd","hintHelpers":"0x404d59b7ac711E7921106D948b55E4a61f1Ba545","lockupContractFactory":"0x7F46B93795f15118b1049201922fe04b41acA160","lqtyStaking":"0x25589D63a3a9835Af5E00ADeeEB415a4f5B5fe9C","priceFeed":"0x7620B306164bc5d5491b99b8ACd515a06b15f29B","sortedTroves":"0xBf7022bae995A8690A14e59284c48F7dF6b9F6F2","stabilityPool":"0xC3809338e11f64B6a0b04c06AB3aC180bD781520","gasPool":"0x9440CD7990b122099A8eF59F74668206C660eED5","unipool":"0xf195b1B4E8F74C91a4D3013626752eB108D7Ed9B","lusdToken":"0xfBf329Bd38D57e0db8777915d4835341b97052A9","lqtyToken":"0x88c7446d72F60471F298629dCB7F28EE7E0E5C3f","multiTroveGetter":"0x251ce26Bc4604Cd2471f7D7F7bDedd2973211d17","uniToken":"0xc693D2CC6e5f9251594F132Ba6CA9DB106eF845b"}}')},3429:function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newActivePoolAddress","type":"address"}],"name":"ActivePoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newDefaultPoolAddress","type":"address"}],"name":"DefaultPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_ETH","type":"uint256"}],"name":"DefaultPoolETHBalanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_LUSDDebt","type":"uint256"}],"name":"DefaultPoolLUSDDebtUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBalance","type":"uint256"}],"name":"ETHBalanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"EtherSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBalance","type":"uint256"}],"name":"LUSDBalanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newStabilityPoolAddress","type":"address"}],"name":"StabilityPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newTroveManagerAddress","type":"address"}],"name":"TroveManagerAddressChanged","type":"event"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activePoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"decreaseLUSDDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLUSDDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"increaseLUSDDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"sendETHToActivePool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_troveManagerAddress","type":"address"},{"internalType":"address","name":"_activePoolAddress","type":"address"}],"name":"setAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"troveManagerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}]')},"349e":function(e){e.exports=JSON.parse('{"chainId":97,"version":"f5a1fd2f0d1cec081e85b2bf90e397c70abda747","deploymentDate":1619083186000,"bootstrapPeriod":1209600,"totalStabilityPoolLQTYReward":"32000000","liquidityMiningLQTYRewardRate":"0.257201646090534979","_priceFeedIsTestnet":false,"_uniTokenIsMock":false,"_isDev":false,"addresses":{"activePool":"0x3d137607a3631FB829FAe6978640405892437bB4","borrowerOperations":"0x61567D436eE04cb85cEF3cAac591e9F7c96cd866","troveManager":"0xC4B54502E9e602847D132f9104dbbDF96a29C41E","collSurplusPool":"0x88ED472FdC81e83629B391d4039EbaAafcfF043D","communityIssuance":"0x43db4c7e4F94d59503b72392746DeF017950b29D","defaultPool":"0x002fA5d904D0Db06646e5daf9C34202c07a79Cea","hintHelpers":"0x59Bf2eeaF8915Bb6AA12AB938FC94d90ed1a1947","lockupContractFactory":"0x21a65d048422C7fA6C6814E4Ea23Ba2105Ce73Ef","lqtyStaking":"0x0115709cbC991D07bDFA67DbcADeCe9f1cA9CA39","priceFeed":"0x220D5099DC02906eD332d75BDA71035249A285d4","sortedTroves":"0x4F7931a54dd5A49d67a9660a58bD047f4c8B22F5","stabilityPool":"0x6448aB372cde3b1b2265E36737e2B19D73DbC68C","gasPool":"0x429a7d0Cb73bf8699ead7cD556Ef1b232A1c1Bc9","unipool":"0x3DFA0402b9F66363b3AcB0f5090fE4C70Fbeeb84","lusdToken":"0x12f4b5C8467Bf7a8F9e6C378cc4FBfd16296364d","lqtyToken":"0xDC2E6648da3b35d8328Df8d50C73dE325169F254","multiTroveGetter":"0x70a41e8cCB6d5Ef175b7E51DC5eb85aC540F9BaE","uniToken":"0x2c334ee98A8D273487EfFC23D8bd3FA11262df33"}}')},3617:function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t._connectToContracts=t._uniTokenIsMock=t._priceFeedIsTestnet=t._LiquityContract=void 0;const i=n("f179"),s=a(n("5551")),r=a(n("443b")),o=a(n("cd4a")),u=a(n("92c3")),d=a(n("8b28")),l=a(n("f6b6")),p=a(n("3429")),y=a(n("cafa")),c=a(n("7914")),m=a(n("654f")),T=a(n("617b")),b=a(n("a476")),f=a(n("e063")),h=a(n("a86d")),_=a(n("8c83")),v=a(n("b96e")),g=a(n("0627")),w=a(n("10ee")),S=a(n("57fc")),M=a(n("fd34")),D=(e,t)=>Object.fromEntries(Object.keys(e).map(n=>[n,async(a,i,...s)=>{if(void 0===a.gasLimit){const t=await e[n](...s,a);a={...a,gasLimit:i(t)}}return t[n](...s,a)}]));class A extends i.Contract{constructor(e,t,n){super(e,t,n),this.estimateAndPopulate=D(this.estimateGas,this.populateTransaction)}extractEvents(e,t){return e.filter(e=>e.address===this.address).map(e=>this.interface.parseLog(e)).filter(e=>e.name===t)}}t._LiquityContract=A;const E=e=>"setPrice"in e;t._priceFeedIsTestnet=E;const L=e=>"mint"in e;t._uniTokenIsMock=L;const x=(e,t)=>({activePool:s.default,borrowerOperations:r.default,troveManager:o.default,lusdToken:u.default,communityIssuance:l.default,defaultPool:p.default,lqtyToken:y.default,hintHelpers:c.default,lockupContractFactory:m.default,lqtyStaking:T.default,multiTroveGetter:b.default,priceFeed:e?h.default:f.default,sortedTroves:_.default,stabilityPool:v.default,gasPool:g.default,collSurplusPool:d.default,unipool:w.default,uniToken:t?M.default:S.default}),C=(e,t)=>Object.fromEntries(Object.entries(e).map(([e,n])=>[e,t(n,e)])),k=(e,{addresses:t,_priceFeedIsTestnet:n,_uniTokenIsMock:a})=>{const i=x(n,a);return C(t,(t,n)=>new A(t,i[n],e))};t._connectToContracts=k},"3a17":function(e,t,n){"use strict";n.r(t);var a=n("e36d");n.d(t,"BigNumber",(function(){return a["a"]}));var i=n("0d17");n.d(t,"formatFixed",(function(){return i["c"]})),n.d(t,"FixedFormat",(function(){return i["a"]})),n.d(t,"FixedNumber",(function(){return i["b"]})),n.d(t,"parseFixed",(function(){return i["d"]})),n.d(t,"_base16To36",(function(){return a["b"]})),n.d(t,"_base36To16",(function(){return a["c"]}))},"3f97":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ObservableEthersLiquity=void 0;const a=n("4b5c"),i=50,s=e=>{let t=void 0,n=0;return(...a)=>{const s=a[a.length-1];void 0!==s.blockNumber&&s.blockNumber>n&&(n=s.blockNumber),void 0!==t&&clearTimeout(t),t=setTimeout(()=>{e(n),t=void 0},i)}};class r{constructor(e){this._readable=e}watchTotalRedistributed(e){const{activePool:t,defaultPool:n}=a._getContracts(this._readable.connection),i=t.filters.EtherSent(),r=s(t=>{this._readable.getTotalRedistributed({blockTag:t}).then(e)}),o=(e,t,a)=>{e===n.address&&r(a)};return t.on(i,o),()=>{t.removeListener(i,o)}}watchTroveWithoutRewards(e,t){null!==t&&void 0!==t||(t=a._requireAddress(this._readable.connection));const{troveManager:n,borrowerOperations:i}=a._getContracts(this._readable.connection),r=n.filters.TroveUpdated(t),o=i.filters.TroveUpdated(t),u=s(n=>{this._readable.getTroveBeforeRedistribution(t,{blockTag:n}).then(e)});return n.on(r,u),i.on(o,u),()=>{n.removeListener(r,u),i.removeListener(o,u)}}watchNumberOfTroves(e){const{troveManager:t}=a._getContracts(this._readable.connection),{TroveUpdated:n}=t.filters,i=n(),r=s(t=>{this._readable.getNumberOfTroves({blockTag:t}).then(e)});return t.on(i,r),()=>{t.removeListener(i,r)}}watchPrice(e){throw new Error("Method not implemented.")}watchTotal(e){const{troveManager:t}=a._getContracts(this._readable.connection),{TroveUpdated:n}=t.filters,i=n(),r=s(t=>{this._readable.getTotal({blockTag:t}).then(e)});return t.on(i,r),()=>{t.removeListener(i,r)}}watchStabilityDeposit(e,t){null!==t&&void 0!==t||(t=a._requireAddress(this._readable.connection));const{activePool:n,stabilityPool:i}=a._getContracts(this._readable.connection),{UserDepositChanged:r}=i.filters,{EtherSent:o}=n.filters,u=r(t),d=o(),l=s(n=>{this._readable.getStabilityDeposit(t,{blockTag:n}).then(e)}),p=(e,t,n)=>{e===i.address&&l(n)};return i.on(u,l),n.on(d,p),()=>{i.removeListener(u,l),n.removeListener(d,p)}}watchLUSDInStabilityPool(e){const{lusdToken:t,stabilityPool:n}=a._getContracts(this._readable.connection),{Transfer:i}=t.filters,r=i(n.address),o=i(null,n.address),u=[r,o],d=s(t=>{this._readable.getLUSDInStabilityPool({blockTag:t}).then(e)});return u.forEach(e=>t.on(e,d)),()=>u.forEach(e=>t.removeListener(e,d))}watchLUSDBalance(e,t){null!==t&&void 0!==t||(t=a._requireAddress(this._readable.connection));const{lusdToken:n}=a._getContracts(this._readable.connection),{Transfer:i}=n.filters,r=i(t),o=i(null,t),u=[r,o],d=s(n=>{this._readable.getLUSDBalance(t,{blockTag:n}).then(e)});return u.forEach(e=>n.on(e,d)),()=>u.forEach(e=>n.removeListener(e,d))}}t.ObservableEthersLiquity=r},4285:function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.PopulatableEthersLiquity=t.PopulatedEthersRedemption=t.PopulatedEthersLiquityTransaction=t.SentEthersLiquityTransaction=t._redeemMaxIterations=void 0;const i=a(n("f654")),s=n("b46b"),r=n("b565"),o=n("4b5c"),u=n("3617"),d=n("f0b4"),l=e=>r.Decimal.fromBigNumberString(e.toHexString());t._redeemMaxIterations=70;const p=r.Decimal.from(.005),y=r.Decimal.from(.001),c=()=>{},m=(e,t)=>n=>e(t(n)),T=e=>e,b=e=>e.add(1e4),f=e=>e.add(8e4),h=e=>e.add(5e4),_=e=>e.add(2e4),v=()=>Math.floor(Math.random()*Number.MAX_SAFE_INTEGER),g=2500;function*w(e){i.default(Number.isInteger(e)&&e>0);while(e){const t=Math.min(e,g);yield t,e-=t}}class S{constructor(e,t,n){this.rawSentTransaction=e,this._connection=t,this._parse=n}_receiptFrom(e){return e?e.status?r._successfulReceipt(e,this._parse(e),()=>d.logsToString(e,o._getContracts(this._connection))):r._failedReceipt(e):r._pendingReceipt}async getReceipt(){return this._receiptFrom(await o._getProvider(this._connection).getTransactionReceipt(this.rawSentTransaction.hash))}async waitForReceipt(){const e=this._receiptFrom(await o._getProvider(this._connection).waitForTransaction(this.rawSentTransaction.hash));return i.default("pending"!==e.status),e}}t.SentEthersLiquityTransaction=S;class M{constructor(e,t,n){this.rawPopulatedTransaction=e,this._connection=t,this._parse=n}async send(){return new S(await o._requireSigner(this._connection).sendTransaction(this.rawPopulatedTransaction),this._connection,this._parse)}}t.PopulatedEthersLiquityTransaction=M;class D extends M{constructor(e,t,n,a,i){const{troveManager:s}=o._getContracts(t);super(e,t,({logs:e})=>s.extractEvents(e,"Redemption").map(({args:{_ETHSent:e,_ETHFee:t,_actualLUSDAmount:n,_attemptedLUSDAmount:a}})=>({attemptedLUSDAmount:l(a),actualLUSDAmount:l(n),collateralTaken:l(e),fee:l(t)}))[0]),this.attemptedLUSDAmount=n,this.redeemableLUSDAmount=a,this.isTruncated=a.lt(n),this._increaseAmountByMinimumNetDebt=i}increaseAmountByMinimumNetDebt(e){if(!this._increaseAmountByMinimumNetDebt)throw new Error("PopulatedEthersRedemption: increaseAmountByMinimumNetDebt() can only be called when amount is truncated");return this._increaseAmountByMinimumNetDebt(e)}}t.PopulatedEthersRedemption=D;class A{constructor(e){this._readable=e}_wrapSimpleTransaction(e){return new M(e,this._readable.connection,c)}_wrapTroveChangeWithFees(e,t){const{borrowerOperations:n}=o._getContracts(this._readable.connection);return new M(t,this._readable.connection,({logs:t})=>{const[a]=n.extractEvents(t,"TroveUpdated").map(({args:{_coll:e,_debt:t}})=>new r.Trove(l(e),l(t))),[i]=n.extractEvents(t,"LUSDBorrowingFeePaid").map(({args:{_LUSDFee:e}})=>l(e));return{params:e,newTrove:a,fee:i}})}async _wrapTroveClosure(e){const{activePool:t,lusdToken:n}=o._getContracts(this._readable.connection);return new M(e,this._readable.connection,({logs:e,from:a})=>{const[i]=n.extractEvents(e,"Transfer").filter(({args:{from:e,to:t}})=>e===a&&t===s.AddressZero).map(({args:{value:e}})=>l(e)),[r]=t.extractEvents(e,"EtherSent").filter(({args:{_to:e}})=>e===a).map(({args:{_amount:e}})=>l(e));return{params:i.nonZero?{withdrawCollateral:r,repayLUSD:i}:{withdrawCollateral:r}}})}_wrapLiquidation(e){const{troveManager:t}=o._getContracts(this._readable.connection);return new M(e,this._readable.connection,({logs:e})=>{const n=t.extractEvents(e,"TroveLiquidated").map(({args:{_borrower:e}})=>e),[a]=t.extractEvents(e,"Liquidation").map(({args:{_LUSDGasCompensation:e,_collGasCompensation:t,_liquidatedColl:n,_liquidatedDebt:a}})=>({collateralGasCompensation:l(t),lusdGasCompensation:l(e),totalLiquidated:new r.Trove(l(n),l(a))}));return{liquidatedAddresses:n,...a}})}_extractStabilityPoolGainsWithdrawalDetails(e){const{stabilityPool:t}=o._getContracts(this._readable.connection),[n]=t.extractEvents(e,"UserDepositChanged").map(({args:{_newDeposit:e}})=>l(e)),[[a,i]]=t.extractEvents(e,"ETHGainWithdrawn").map(({args:{_ETH:e,_LUSDLoss:t}})=>[l(e),l(t)]),[s]=t.extractEvents(e,"LQTYPaidToDepositor").map(({args:{_LQTY:e}})=>l(e));return{lusdLoss:i,newLUSDDeposit:n,collateralGain:a,lqtyReward:s}}_wrapStabilityPoolGainsWithdrawal(e){return new M(e,this._readable.connection,({logs:e})=>this._extractStabilityPoolGainsWithdrawalDetails(e))}_wrapStabilityDepositTopup(e,t){return new M(t,this._readable.connection,({logs:t})=>({...this._extractStabilityPoolGainsWithdrawalDetails(t),change:e}))}async _wrapStabilityDepositWithdrawal(e){const{stabilityPool:t,lusdToken:n}=o._getContracts(this._readable.connection);return new M(e,this._readable.connection,({logs:e,from:a})=>{const i=this._extractStabilityPoolGainsWithdrawalDetails(e),[s]=n.extractEvents(e,"Transfer").filter(({args:{from:e,to:n}})=>e===t.address&&n===a).map(({args:{value:e}})=>l(e));return{...i,change:{withdrawLUSD:s,withdrawAllLUSD:i.newLUSDDeposit.isZero}}})}_wrapCollateralGainTransfer(e){const{borrowerOperations:t}=o._getContracts(this._readable.connection);return new M(e,this._readable.connection,({logs:e})=>{const[n]=t.extractEvents(e,"TroveUpdated").map(({args:{_coll:e,_debt:t}})=>new r.Trove(l(e),l(t)));return{...this._extractStabilityPoolGainsWithdrawalDetails(e),newTrove:n}})}async _findHintsForNominalCollateralRatio(e){const{sortedTroves:t,hintHelpers:n}=o._getContracts(this._readable.connection),a=await this._readable.getNumberOfTroves();if(!a)return[s.AddressZero,s.AddressZero];if(e.infinite)return[s.AddressZero,await t.getFirst()];const i=Math.ceil(10*Math.sqrt(a)),[r,...u]=w(i),d=({latestRandomSeed:t,results:a},i)=>n.getApproxHint(e.hex,i,t).then(({latestRandomSeed:e,...t})=>({latestRandomSeed:e,results:[...a,t]})),{results:l}=await u.reduce((e,t)=>e.then(e=>d(e,t)),d({latestRandomSeed:v(),results:[]},r)),{hintAddress:p}=l.reduce((e,t)=>e.diff.lt(t.diff)?e:t);return t.findInsertPosition(e.hex,p,p)}async _findHints(e){if(e instanceof r.TroveWithPendingRedistribution)throw new Error("Rewards must be applied to this Trove");return this._findHintsForNominalCollateralRatio(e._nominalCollateralRatio)}async _findRedemptionHints(e){const{hintHelpers:n}=o._getContracts(this._readable.connection),a=await this._readable.getPrice(),{firstRedemptionHint:i,partialRedemptionHintNICR:r,truncatedLUSDamount:u}=await n.getRedemptionHints(e.hex,a.hex,t._redeemMaxIterations),[d,p]=r.isZero()?[s.AddressZero,s.AddressZero]:await this._findHintsForNominalCollateralRatio(l(r));return[l(u),i,d,p,r]}async openTrove(e,t,n){const{borrowerOperations:a}=o._getContracts(this._readable.connection),i=r._normalizeTroveCreation(e),{depositCollateral:s,borrowLUSD:u}=i,d=await this._readable.getFees(),l=d.borrowingRate(),y=r.Trove.create(i,l);return t=void 0!==t?r.Decimal.from(t):l.add(p),this._wrapTroveChangeWithFees(i,await a.estimateAndPopulate.openTrove({value:s.hex,...n},m(b,f),t.hex,u.hex,...await this._findHints(y)))}async closeTrove(e){const{borrowerOperations:t}=o._getContracts(this._readable.connection);return this._wrapTroveClosure(await t.estimateAndPopulate.closeTrove({...e},T))}depositCollateral(e,t){return this.adjustTrove({depositCollateral:e},void 0,t)}withdrawCollateral(e,t){return this.adjustTrove({withdrawCollateral:e},void 0,t)}borrowLUSD(e,t,n){return this.adjustTrove({borrowLUSD:e},t,n)}repayLUSD(e,t){return this.adjustTrove({repayLUSD:e},void 0,t)}async adjustTrove(e,t,n){var a,i;const s=o._requireAddress(this._readable.connection,n),{borrowerOperations:u}=o._getContracts(this._readable.connection),d=r._normalizeTroveAdjustment(e),{depositCollateral:l,withdrawCollateral:y,borrowLUSD:c,repayLUSD:h}=d,[_,v]=await Promise.all([this._readable.getTrove(s),c&&this._readable.getFees()]),g=null===v||void 0===v?void 0:v.borrowingRate(),w=_.adjust(d,g);return t=void 0!==t?r.Decimal.from(t):null!==(a=null===g||void 0===g?void 0:g.add(p))&&void 0!==a?a:r.Decimal.ZERO,this._wrapTroveChangeWithFees(d,await u.estimateAndPopulate.adjustTrove({value:null===l||void 0===l?void 0:l.hex,...n},m(c?b:T,f),t.hex,(null!==y&&void 0!==y?y:r.Decimal.ZERO).hex,(null!==(i=null!==c&&void 0!==c?c:h)&&void 0!==i?i:r.Decimal.ZERO).hex,!!c,...await this._findHints(w)))}async claimCollateralSurplus(e){const{borrowerOperations:t}=o._getContracts(this._readable.connection);return this._wrapSimpleTransaction(await t.estimateAndPopulate.claimCollateral({...e},T))}async setPrice(e,t){const{priceFeed:n}=o._getContracts(this._readable.connection);if(!u._priceFeedIsTestnet(n))throw new Error("setPrice() unavailable on this deployment of Liquity");return this._wrapSimpleTransaction(await n.estimateAndPopulate.setPrice({...t},T,r.Decimal.from(e).hex))}async liquidate(e,t){const{troveManager:n}=o._getContracts(this._readable.connection);return Array.isArray(e)?this._wrapLiquidation(await n.estimateAndPopulate.batchLiquidateTroves({...t},h,e)):this._wrapLiquidation(await n.estimateAndPopulate.liquidate({...t},h,e))}async liquidateUpTo(e,t){const{troveManager:n}=o._getContracts(this._readable.connection);return this._wrapLiquidation(await n.estimateAndPopulate.liquidateTroves({...t},h,e))}async depositLUSDInStabilityPool(e,t,n){var a;const{stabilityPool:i}=o._getContracts(this._readable.connection),u=r.Decimal.from(e);return this._wrapStabilityDepositTopup({depositLUSD:u},await i.estimateAndPopulate.provideToSP({...n},h,u.hex,null!==(a=null!==t&&void 0!==t?t:this._readable.connection.frontendTag)&&void 0!==a?a:s.AddressZero))}async withdrawLUSDFromStabilityPool(e,t){const{stabilityPool:n}=o._getContracts(this._readable.connection);return this._wrapStabilityDepositWithdrawal(await n.estimateAndPopulate.withdrawFromSP({...t},h,r.Decimal.from(e).hex))}async withdrawGainsFromStabilityPool(e){const{stabilityPool:t}=o._getContracts(this._readable.connection);return this._wrapStabilityPoolGainsWithdrawal(await t.estimateAndPopulate.withdrawFromSP({...e},h,r.Decimal.ZERO.hex))}async transferCollateralGainToTrove(e){const t=o._requireAddress(this._readable.connection,e),{stabilityPool:n}=o._getContracts(this._readable.connection),[a,i]=await Promise.all([this._readable.getTrove(t),this._readable.getStabilityDeposit(t)]),s=a.addCollateral(i.collateralGain);return this._wrapCollateralGainTransfer(await n.estimateAndPopulate.withdrawETHGainToTrove({...e},m(f,h),...await this._findHints(s)))}async sendLUSD(e,t,n){const{lusdToken:a}=o._getContracts(this._readable.connection);return this._wrapSimpleTransaction(await a.estimateAndPopulate.transfer({...n},T,e,r.Decimal.from(t).hex))}async sendLQTY(e,t,n){const{lqtyToken:a}=o._getContracts(this._readable.connection);return this._wrapSimpleTransaction(await a.estimateAndPopulate.transfer({...n},T,e,r.Decimal.from(t).hex))}async redeemLUSD(e,n,a){const{troveManager:i}=o._getContracts(this._readable.connection),u=r.Decimal.from(e),[d,l,[p,c,...m]]=await Promise.all([this._readable.getFees(),this._readable.getTotal(),this._findRedemptionHints(u)]);if(p.isZero)throw new Error(`redeemLUSD: amount too low to redeem (try at least ${r.LUSD_MINIMUM_NET_DEBT})`);const T=e=>r.Decimal.min(d.redemptionRate(e.div(l.debt)).add(y),r.Decimal.ONE),f=async(e,n,o=e,u=[s.AddressZero,s.AddressZero,0])=>{const d=void 0!==n?r.Decimal.from(n):T(o);return new D(await i.estimateAndPopulate.redeemCollateral({...a},b,o.hex,c,...u,t._redeemMaxIterations,d.hex),this._readable.connection,e,o,o.lt(e)?e=>f(o.add(r.LUSD_MINIMUM_NET_DEBT),null!==e&&void 0!==e?e:n):void 0)};return f(u,n,p,m)}async stakeLQTY(e,t){const{lqtyStaking:n}=o._getContracts(this._readable.connection);return this._wrapSimpleTransaction(await n.estimateAndPopulate.stake({...t},T,r.Decimal.from(e).hex))}async unstakeLQTY(e,t){const{lqtyStaking:n}=o._getContracts(this._readable.connection);return this._wrapSimpleTransaction(await n.estimateAndPopulate.unstake({...t},T,r.Decimal.from(e).hex))}withdrawGainsFromStaking(e){return this.unstakeLQTY(r.Decimal.ZERO,e)}async registerFrontend(e,t){const{stabilityPool:n}=o._getContracts(this._readable.connection);return this._wrapSimpleTransaction(await n.estimateAndPopulate.registerFrontEnd({...t},T,r.Decimal.from(e).hex))}async _mintUniToken(e,t,n){null!==t&&void 0!==t||(t=o._requireAddress(this._readable.connection,n));const{uniToken:a}=o._getContracts(this._readable.connection);if(!u._uniTokenIsMock(a))throw new Error("_mintUniToken() unavailable on this deployment of Liquity");return this._wrapSimpleTransaction(await a.estimateAndPopulate.mint({...n},T,t,r.Decimal.from(e).hex))}async approveUniTokens(e,t){const{uniToken:n,unipool:a}=o._getContracts(this._readable.connection);return this._wrapSimpleTransaction(await n.estimateAndPopulate.approve({...t},T,a.address,r.Decimal.from(null!==e&&void 0!==e?e:r.Decimal.INFINITY).hex))}async stakeUniTokens(e,t){const{unipool:n}=o._getContracts(this._readable.connection);return this._wrapSimpleTransaction(await n.estimateAndPopulate.stake({...t},_,r.Decimal.from(e).hex))}async unstakeUniTokens(e,t){const{unipool:n}=o._getContracts(this._readable.connection);return this._wrapSimpleTransaction(await n.estimateAndPopulate.withdraw({...t},_,r.Decimal.from(e).hex))}async withdrawLQTYRewardFromLiquidityMining(e){const{unipool:t}=o._getContracts(this._readable.connection);return this._wrapSimpleTransaction(await t.estimateAndPopulate.claimReward({...e},_))}async exitLiquidityMining(e){const{unipool:t}=o._getContracts(this._readable.connection);return this._wrapSimpleTransaction(await t.estimateAndPopulate.withdrawAndClaim({...e},_))}}t.PopulatableEthersLiquity=A},"443b":function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_activePoolAddress","type":"address"}],"name":"ActivePoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_collSurplusPoolAddress","type":"address"}],"name":"CollSurplusPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_defaultPoolAddress","type":"address"}],"name":"DefaultPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_gasPoolAddress","type":"address"}],"name":"GasPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lqtyStakingAddress","type":"address"}],"name":"LQTYStakingAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"_LUSDFee","type":"uint256"}],"name":"LUSDBorrowingFeePaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lusdTokenAddress","type":"address"}],"name":"LUSDTokenAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newPriceFeedAddress","type":"address"}],"name":"PriceFeedAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_sortedTrovesAddress","type":"address"}],"name":"SortedTrovesAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_stabilityPoolAddress","type":"address"}],"name":"StabilityPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"arrayIndex","type":"uint256"}],"name":"TroveCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newTroveManagerAddress","type":"address"}],"name":"TroveManagerAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"_debt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_coll","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stake","type":"uint256"},{"indexed":false,"internalType":"enum BorrowerOperations.BorrowerOperation","name":"operation","type":"uint8"}],"name":"TroveUpdated","type":"event"},{"inputs":[],"name":"BORROWING_FEE_FLOOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CCR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DECIMAL_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LUSD_GAS_COMPENSATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MCR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_NET_DEBT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERCENT_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_100pct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activePool","outputs":[{"internalType":"contract IActivePool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_upperHint","type":"address"},{"internalType":"address","name":"_lowerHint","type":"address"}],"name":"addColl","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxFeePercentage","type":"uint256"},{"internalType":"uint256","name":"_collWithdrawal","type":"uint256"},{"internalType":"uint256","name":"_LUSDChange","type":"uint256"},{"internalType":"bool","name":"_isDebtIncrease","type":"bool"},{"internalType":"address","name":"_upperHint","type":"address"},{"internalType":"address","name":"_lowerHint","type":"address"}],"name":"adjustTrove","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"claimCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"closeTrove","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"defaultPool","outputs":[{"internalType":"contract IDefaultPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_debt","type":"uint256"}],"name":"getCompositeDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"getEntireSystemColl","outputs":[{"internalType":"uint256","name":"entireSystemColl","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEntireSystemDebt","outputs":[{"internalType":"uint256","name":"entireSystemDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lqtyStaking","outputs":[{"internalType":"contract ILQTYStaking","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lqtyStakingAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lusdToken","outputs":[{"internalType":"contract ILUSDToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"},{"internalType":"address","name":"_upperHint","type":"address"},{"internalType":"address","name":"_lowerHint","type":"address"}],"name":"moveETHGainToTrove","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxFeePercentage","type":"uint256"},{"internalType":"uint256","name":"_LUSDAmount","type":"uint256"},{"internalType":"address","name":"_upperHint","type":"address"},{"internalType":"address","name":"_lowerHint","type":"address"}],"name":"openTrove","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"contract IPriceFeed","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_LUSDAmount","type":"uint256"},{"internalType":"address","name":"_upperHint","type":"address"},{"internalType":"address","name":"_lowerHint","type":"address"}],"name":"repayLUSD","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_troveManagerAddress","type":"address"},{"internalType":"address","name":"_activePoolAddress","type":"address"},{"internalType":"address","name":"_defaultPoolAddress","type":"address"},{"internalType":"address","name":"_stabilityPoolAddress","type":"address"},{"internalType":"address","name":"_gasPoolAddress","type":"address"},{"internalType":"address","name":"_collSurplusPoolAddress","type":"address"},{"internalType":"address","name":"_priceFeedAddress","type":"address"},{"internalType":"address","name":"_sortedTrovesAddress","type":"address"},{"internalType":"address","name":"_lusdTokenAddress","type":"address"},{"internalType":"address","name":"_lqtyStakingAddress","type":"address"}],"name":"setAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sortedTroves","outputs":[{"internalType":"contract ISortedTroves","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"troveManager","outputs":[{"internalType":"contract ITroveManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_collWithdrawal","type":"uint256"},{"internalType":"address","name":"_upperHint","type":"address"},{"internalType":"address","name":"_lowerHint","type":"address"}],"name":"withdrawColl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_maxFeePercentage","type":"uint256"},{"internalType":"uint256","name":"_LUSDAmount","type":"uint256"},{"internalType":"address","name":"_upperHint","type":"address"},{"internalType":"address","name":"_lowerHint","type":"address"}],"name":"withdrawLUSD","outputs":[],"stateMutability":"nonpayable","type":"function"}]')},"464b":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LQTYStake=void 0;const a=n("cdef");class i{constructor(e=a.Decimal.ZERO,t=a.Decimal.ZERO,n=a.Decimal.ZERO){this.stakedLQTY=e,this.collateralGain=t,this.lusdGain=n}get isEmpty(){return this.stakedLQTY.isZero&&this.collateralGain.isZero&&this.lusdGain.isZero}toString(){return"{ stakedLQTY: "+this.stakedLQTY+", collateralGain: "+this.collateralGain+`, lusdGain: ${this.lusdGain} }`}equals(e){return this.stakedLQTY.eq(e.stakedLQTY)&&this.collateralGain.eq(e.collateralGain)&&this.lusdGain.eq(e.lusdGain)}whatChanged(e){return e=a.Decimal.from(e),e.lt(this.stakedLQTY)?{unstakeLQTY:this.stakedLQTY.sub(e),unstakeAllLQTY:e.isZero}:e.gt(this.stakedLQTY)?{stakeLQTY:e.sub(this.stakedLQTY)}:void 0}apply(e){return e?void 0!==e.unstakeLQTY?e.unstakeAllLQTY||this.stakedLQTY.lte(e.unstakeLQTY)?a.Decimal.ZERO:this.stakedLQTY.sub(e.unstakeLQTY):this.stakedLQTY.add(e.stakeLQTY):this.stakedLQTY}}t.LQTYStake=i},"469b":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t._CachedReadableLiquity=void 0;class a{constructor(e,t){this._readable=e,this._cache=t}async getTotalRedistributed(...e){var t;return null!==(t=this._cache.getTotalRedistributed(...e))&&void 0!==t?t:this._readable.getTotalRedistributed(...e)}async getTroveBeforeRedistribution(e,...t){var n;return null!==(n=this._cache.getTroveBeforeRedistribution(e,...t))&&void 0!==n?n:this._readable.getTroveBeforeRedistribution(e,...t)}async getTrove(e,...t){const[n,a]=await Promise.all([this.getTroveBeforeRedistribution(e,...t),this.getTotalRedistributed(...t)]);return n.applyRedistribution(a)}async getNumberOfTroves(...e){var t;return null!==(t=this._cache.getNumberOfTroves(...e))&&void 0!==t?t:this._readable.getNumberOfTroves(...e)}async getPrice(...e){var t;return null!==(t=this._cache.getPrice(...e))&&void 0!==t?t:this._readable.getPrice(...e)}async getTotal(...e){var t;return null!==(t=this._cache.getTotal(...e))&&void 0!==t?t:this._readable.getTotal(...e)}async getStabilityDeposit(e,...t){var n;return null!==(n=this._cache.getStabilityDeposit(e,...t))&&void 0!==n?n:this._readable.getStabilityDeposit(e,...t)}async getRemainingStabilityPoolLQTYReward(...e){var t;return null!==(t=this._cache.getRemainingStabilityPoolLQTYReward(...e))&&void 0!==t?t:this._readable.getRemainingStabilityPoolLQTYReward(...e)}async getLUSDInStabilityPool(...e){var t;return null!==(t=this._cache.getLUSDInStabilityPool(...e))&&void 0!==t?t:this._readable.getLUSDInStabilityPool(...e)}async getLUSDBalance(e,...t){var n;return null!==(n=this._cache.getLUSDBalance(e,...t))&&void 0!==n?n:this._readable.getLUSDBalance(e,...t)}async getLQTYBalance(e,...t){var n;return null!==(n=this._cache.getLQTYBalance(e,...t))&&void 0!==n?n:this._readable.getLQTYBalance(e,...t)}async getUniTokenBalance(e,...t){var n;return null!==(n=this._cache.getUniTokenBalance(e,...t))&&void 0!==n?n:this._readable.getUniTokenBalance(e,...t)}async getUniTokenAllowance(e,...t){var n;return null!==(n=this._cache.getUniTokenAllowance(e,...t))&&void 0!==n?n:this._readable.getUniTokenAllowance(e,...t)}async getRemainingLiquidityMiningLQTYReward(...e){var t;return null!==(t=this._cache.getRemainingLiquidityMiningLQTYReward(...e))&&void 0!==t?t:this._readable.getRemainingLiquidityMiningLQTYReward(...e)}async getLiquidityMiningStake(e,...t){var n;return null!==(n=this._cache.getLiquidityMiningStake(e,...t))&&void 0!==n?n:this._readable.getLiquidityMiningStake(e,...t)}async getTotalStakedUniTokens(...e){var t;return null!==(t=this._cache.getTotalStakedUniTokens(...e))&&void 0!==t?t:this._readable.getTotalStakedUniTokens(...e)}async getLiquidityMiningLQTYReward(e,...t){var n;return null!==(n=this._cache.getLiquidityMiningLQTYReward(e,...t))&&void 0!==n?n:this._readable.getLiquidityMiningLQTYReward(e,...t)}async getCollateralSurplusBalance(e,...t){var n;return null!==(n=this._cache.getCollateralSurplusBalance(e,...t))&&void 0!==n?n:this._readable.getCollateralSurplusBalance(e,...t)}async getTroves(e,...t){var n;const{beforeRedistribution:a,...i}=e,[s,r]=await Promise.all([a?void 0:this.getTotalRedistributed(...t),null!==(n=this._cache.getTroves({beforeRedistribution:!0,...i},...t))&&void 0!==n?n:this._readable.getTroves({beforeRedistribution:!0,...i},...t)]);return s?r.map(e=>e.applyRedistribution(s)):r}async getFees(...e){var t;return null!==(t=this._cache.getFees(...e))&&void 0!==t?t:this._readable.getFees(...e)}async getLQTYStake(e,...t){var n;return null!==(n=this._cache.getLQTYStake(e,...t))&&void 0!==n?n:this._readable.getLQTYStake(e,...t)}async getTotalStakedLQTY(...e){var t;return null!==(t=this._cache.getTotalStakedLQTY(...e))&&void 0!==t?t:this._readable.getTotalStakedLQTY(...e)}async getFrontendStatus(e,...t){var n;return null!==(n=this._cache.getFrontendStatus(e,...t))&&void 0!==n?n:this._readable.getFrontendStatus(e,...t)}}t._CachedReadableLiquity=a},"4b5c":function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t._connect=t._connectByChainId=t._connectToDeployment=t.UnsupportedNetworkError=t._usingStore=t._requireFrontendAddress=t._requireAddress=t._getProvider=t._requireSigner=t._getBlockTimestamp=t._getContracts=void 0;const i=n("7ca5"),s=n("b565"),r=a(n("e25f")),o=a(n("2a71")),u=a(n("349e")),d=a(n("e753")),l=a(n("f5c4")),p=a(n("2589")),y=n("3617"),c=n("f796"),m=r.default,T={[p.default.chainId]:p.default,[l.default.chainId]:l.default,[d.default.chainId]:d.default,[o.default.chainId]:o.default,[u.default.chainId]:u.default,...null!==m?{[m.chainId]:m}:{}},b=e=>e,f=(e,t,n,a,{deploymentDate:i,totalStabilityPoolLQTYReward:r,liquidityMiningLQTYRewardRate:o,...u},d)=>{if(d&&void 0!==d.useStore&&!R.includes(d.useStore))throw new Error("Invalid useStore value "+d.useStore);return b({provider:e,signer:t,_contracts:n,_multicall:a,deploymentDate:new Date(i),totalStabilityPoolLQTYReward:s.Decimal.from(r),liquidityMiningLQTYRewardRate:s.Decimal.from(o),...u,...d})},h=e=>e._contracts;t._getContracts=h;const _=e=>e._multicall,v=e=>e.toNumber(),g=({timestamp:e})=>e,w=(e,n="latest")=>{var a,i;return null!==(i=null===(a=_(e))||void 0===a?void 0:a.getCurrentBlockTimestamp({blockTag:n}).then(v))&&void 0!==i?i:t._getProvider(e).getBlock(n).then(g)};t._getBlockTimestamp=w;const S=e=>{throw e},M=e=>{var t;return null!==(t=e.signer)&&void 0!==t?t:S(new Error("Must be connected through a Signer"))};t._requireSigner=M;const D=e=>e.provider;t._getProvider=D;const A=(e,t)=>{var n,a;return null!==(a=null!==(n=null===t||void 0===t?void 0:t.from)&&void 0!==n?n:e.userAddress)&&void 0!==a?a:S(new Error("A user address is required"))};t._requireAddress=A;const E=e=>{var t;return null!==(t=e.frontendTag)&&void 0!==t?t:S(new Error("A frontend address is required"))};t._requireFrontendAddress=E;const L=e=>void 0!==e.useStore;t._usingStore=L;class x extends Error{constructor(e){super(`Unsupported network (chainId = ${e})`),this.name="UnsupportedNetworkError",this.chainId=e}}t.UnsupportedNetworkError=x;const C=e=>{var t;const n=i.Signer.isSigner(e)?null!==(t=e.provider)&&void 0!==t?t:S(new Error("Signer must have a Provider")):e,a=i.Signer.isSigner(e)?e:void 0;return[n,a]},k=(e,t,n)=>f(...C(t),y._connectToContracts(t,e),void 0,e,n);t._connectToDeployment=k;const R=["blockPolled"];function P(e,t,n,a){var i;const s=null!==(i=T[n])&&void 0!==i?i:S(new x(n));return f(e,t,y._connectToContracts(null!==t&&void 0!==t?t:e,s),c._connectToMulticall(null!==t&&void 0!==t?t:e,n),s,a)}t._connectByChainId=P;const O=async(e,t)=>{const[n,a]=C(e);if(a){if(void 0!==(null===t||void 0===t?void 0:t.userAddress))throw new Error("Can't override userAddress when connecting through Signer");t={...t,userAddress:await a.getAddress()}}return P(n,a,(await n.getNetwork()).chainId,t)};t._connect=O},5551:function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newActivePoolAddress","type":"address"}],"name":"ActivePoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_ETH","type":"uint256"}],"name":"ActivePoolETHBalanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_LUSDDebt","type":"uint256"}],"name":"ActivePoolLUSDDebtUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newBorrowerOperationsAddress","type":"address"}],"name":"BorrowerOperationsAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newDefaultPoolAddress","type":"address"}],"name":"DefaultPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBalance","type":"uint256"}],"name":"ETHBalanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"EtherSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBalance","type":"uint256"}],"name":"LUSDBalanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newStabilityPoolAddress","type":"address"}],"name":"StabilityPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newTroveManagerAddress","type":"address"}],"name":"TroveManagerAddressChanged","type":"event"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"borrowerOperationsAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"decreaseLUSDDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"defaultPoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLUSDDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"increaseLUSDDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"sendETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_borrowerOperationsAddress","type":"address"},{"internalType":"address","name":"_troveManagerAddress","type":"address"},{"internalType":"address","name":"_stabilityPoolAddress","type":"address"},{"internalType":"address","name":"_defaultPoolAddress","type":"address"}],"name":"setAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stabilityPoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"troveManagerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}]')},"57fc":function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]')},"617b":function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_activePoolAddress","type":"address"}],"name":"ActivePoolAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_borrowerOperationsAddress","type":"address"}],"name":"BorrowerOperationsAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_account","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"EtherSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_F_ETH","type":"uint256"}],"name":"F_ETHUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_F_LUSD","type":"uint256"}],"name":"F_LUSDUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lqtyTokenAddress","type":"address"}],"name":"LQTYTokenAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lusdTokenAddress","type":"address"}],"name":"LUSDTokenAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"newStake","type":"uint256"}],"name":"StakeChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"_F_ETH","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_F_LUSD","type":"uint256"}],"name":"StakerSnapshotsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"staker","type":"address"},{"indexed":false,"internalType":"uint256","name":"LUSDGain","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"ETHGain","type":"uint256"}],"name":"StakingGainsWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_totalLQTYStaked","type":"uint256"}],"name":"TotalLQTYStakedUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_troveManager","type":"address"}],"name":"TroveManagerAddressSet","type":"event"},{"inputs":[],"name":"DECIMAL_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"F_ETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"F_LUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activePoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"borrowerOperationsAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getPendingETHGain","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"getPendingLUSDGain","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ETHFee","type":"uint256"}],"name":"increaseF_ETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_LUSDFee","type":"uint256"}],"name":"increaseF_LUSD","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lqtyToken","outputs":[{"internalType":"contract ILQTYToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lusdToken","outputs":[{"internalType":"contract ILUSDToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lqtyTokenAddress","type":"address"},{"internalType":"address","name":"_lusdTokenAddress","type":"address"},{"internalType":"address","name":"_troveManagerAddress","type":"address"},{"internalType":"address","name":"_borrowerOperationsAddress","type":"address"},{"internalType":"address","name":"_activePoolAddress","type":"address"}],"name":"setAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"snapshots","outputs":[{"internalType":"uint256","name":"F_ETH_Snapshot","type":"uint256"},{"internalType":"uint256","name":"F_LUSD_Snapshot","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_LQTYamount","type":"uint256"}],"name":"stake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"stakes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalLQTYStaked","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"troveManagerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_LQTYamount","type":"uint256"}],"name":"unstake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]')},"654f":function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lqtyTokenAddress","type":"address"}],"name":"LQTYTokenAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lockupContractAddress","type":"address"},{"indexed":false,"internalType":"address","name":"_beneficiary","type":"address"},{"indexed":false,"internalType":"uint256","name":"_unlockTime","type":"uint256"},{"indexed":false,"internalType":"address","name":"_deployer","type":"address"}],"name":"LockupContractDeployedThroughFactory","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SECONDS_IN_ONE_YEAR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_beneficiary","type":"address"},{"internalType":"uint256","name":"_unlockTime","type":"uint256"}],"name":"deployLockupContract","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_contractAddress","type":"address"}],"name":"isRegisteredLockup","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"lockupContractToDeployer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lqtyTokenAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_lqtyTokenAddress","type":"address"}],"name":"setLQTYTokenAddress","outputs":[],"stateMutability":"nonpayable","type":"function"}]')},7914:function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_sortedTrovesAddress","type":"address"}],"name":"SortedTrovesAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_troveManagerAddress","type":"address"}],"name":"TroveManagerAddressChanged","type":"event"},{"inputs":[],"name":"BORROWING_FEE_FLOOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CCR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DECIMAL_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LUSD_GAS_COMPENSATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MCR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_NET_DEBT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERCENT_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_100pct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activePool","outputs":[{"internalType":"contract IActivePool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coll","type":"uint256"},{"internalType":"uint256","name":"_debt","type":"uint256"},{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"computeCR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"uint256","name":"_coll","type":"uint256"},{"internalType":"uint256","name":"_debt","type":"uint256"}],"name":"computeNominalCR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"defaultPool","outputs":[{"internalType":"contract IDefaultPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_CR","type":"uint256"},{"internalType":"uint256","name":"_numTrials","type":"uint256"},{"internalType":"uint256","name":"_inputRandomSeed","type":"uint256"}],"name":"getApproxHint","outputs":[{"internalType":"address","name":"hintAddress","type":"address"},{"internalType":"uint256","name":"diff","type":"uint256"},{"internalType":"uint256","name":"latestRandomSeed","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEntireSystemColl","outputs":[{"internalType":"uint256","name":"entireSystemColl","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEntireSystemDebt","outputs":[{"internalType":"uint256","name":"entireSystemDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_LUSDamount","type":"uint256"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"uint256","name":"_maxIterations","type":"uint256"}],"name":"getRedemptionHints","outputs":[{"internalType":"address","name":"firstRedemptionHint","type":"address"},{"internalType":"uint256","name":"partialRedemptionHintNICR","type":"uint256"},{"internalType":"uint256","name":"truncatedLUSDamount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"contract IPriceFeed","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sortedTrovesAddress","type":"address"},{"internalType":"address","name":"_troveManagerAddress","type":"address"}],"name":"setAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sortedTroves","outputs":[{"internalType":"contract ISortedTroves","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"troveManager","outputs":[{"internalType":"contract ITroveManager","name":"","type":"address"}],"stateMutability":"view","type":"function"}]')},"88d5":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ReadableEthersLiquity=void 0;const a=n("b565"),i=n("4b5c"),s=n("faa6"),r=a.Decimal.from("0.999037758833783000"),o=a.Decimal.from(2);var u;(function(e){e[e["nonExistent"]=0]="nonExistent",e[e["active"]=1]="active",e[e["closedByOwner"]=2]="closedByOwner",e[e["closedByLiquidation"]=3]="closedByLiquidation",e[e["closedByRedemption"]=4]="closedByRedemption"})(u||(u={}));const d=e=>{throw e},l=e=>e===u.nonExistent?"nonExistent":e===u.active?"open":e===u.closedByOwner?"closedByOwner":e===u.closedByLiquidation?"closedByLiquidation":e===u.closedByRedemption?"closedByRedemption":d(new Error("invalid backendStatus "+e)),p=e=>a.Decimal.fromBigNumberString(e.toHexString()),y=e=>e.toNumber(),c=e=>new Date(1e3*e),m=["ascendingCollateralRatio","descendingCollateralRatio"],T=(e,t)=>{if(void 0!==e[t]){if(!Number.isInteger(e[t]))throw new Error(t+" must be an integer");if(e[t]<0)throw new Error(t+" must not be negative")}};class b{constructor(e){this.connection=e}static _from(e){const t=new b(e);return"blockPolled"===e.useStore?new _(t):t}static async connect(e,t){return b._from(await i._connect(e,t))}hasStore(){return!1}async getTotalRedistributed(e){const{troveManager:t}=i._getContracts(this.connection),[n,s]=await Promise.all([t.L_ETH({...e}).then(p),t.L_LUSDDebt({...e}).then(p)]);return new a.Trove(n,s)}async getTroveBeforeRedistribution(e,t){null!==e&&void 0!==e||(e=i._requireAddress(this.connection));const{troveManager:n}=i._getContracts(this.connection),[s,r]=await Promise.all([n.Troves(e,{...t}),n.rewardSnapshots(e,{...t})]);return s.status===u.active?new a.TroveWithPendingRedistribution(e,l(s.status),p(s.coll),p(s.debt),p(s.stake),new a.Trove(p(r.ETH),p(r.LUSDDebt))):new a.TroveWithPendingRedistribution(e,l(s.status))}async getTrove(e,t){const[n,a]=await Promise.all([this.getTroveBeforeRedistribution(e,t),this.getTotalRedistributed(t)]);return n.applyRedistribution(a)}async getNumberOfTroves(e){const{troveManager:t}=i._getContracts(this.connection);return(await t.getTroveOwnersCount({...e})).toNumber()}getPrice(e){const{priceFeed:t}=i._getContracts(this.connection);return t.callStatic.fetchPrice({...e}).then(p)}async _getActivePool(e){const{activePool:t}=i._getContracts(this.connection),[n,s]=await Promise.all([t.getETH({...e}),t.getLUSDDebt({...e})].map(e=>e.then(p)));return new a.Trove(n,s)}async _getDefaultPool(e){const{defaultPool:t}=i._getContracts(this.connection),[n,s]=await Promise.all([t.getETH({...e}),t.getLUSDDebt({...e})].map(e=>e.then(p)));return new a.Trove(n,s)}async getTotal(e){const[t,n]=await Promise.all([this._getActivePool(e),this._getDefaultPool(e)]);return t.add(n)}async getStabilityDeposit(e,t){null!==e&&void 0!==e||(e=i._requireAddress(this.connection));const{stabilityPool:n}=i._getContracts(this.connection),[{frontEndTag:s,initialValue:r},o,u,d]=await Promise.all([n.deposits(e,{...t}),n.getCompoundedLUSDDeposit(e,{...t}),n.getDepositorETHGain(e,{...t}),n.getDepositorLQTYGain(e,{...t})]);return new a.StabilityDeposit(p(r),p(o),p(u),p(d),s)}async getRemainingStabilityPoolLQTYReward(e){const{communityIssuance:t}=i._getContracts(this.connection),n=this.connection.totalStabilityPoolLQTYReward,a=p(await t.totalLQTYIssued({...e}));return n.sub(a)}getLUSDInStabilityPool(e){const{stabilityPool:t}=i._getContracts(this.connection);return t.getTotalLUSDDeposits({...e}).then(p)}getLUSDBalance(e,t){null!==e&&void 0!==e||(e=i._requireAddress(this.connection));const{lusdToken:n}=i._getContracts(this.connection);return n.balanceOf(e,{...t}).then(p)}getLQTYBalance(e,t){null!==e&&void 0!==e||(e=i._requireAddress(this.connection));const{lqtyToken:n}=i._getContracts(this.connection);return n.balanceOf(e,{...t}).then(p)}getUniTokenBalance(e,t){null!==e&&void 0!==e||(e=i._requireAddress(this.connection));const{uniToken:n}=i._getContracts(this.connection);return n.balanceOf(e,{...t}).then(p)}getUniTokenAllowance(e,t){null!==e&&void 0!==e||(e=i._requireAddress(this.connection));const{uniToken:n,unipool:a}=i._getContracts(this.connection);return n.allowance(e,a.address,{...t}).then(p)}async _getRemainingLiquidityMiningLQTYRewardCalculator(e){const{unipool:t}=i._getContracts(this.connection),[n,a,s,r]=await Promise.all([t.totalSupply({...e}),t.rewardRate({...e}).then(p),t.periodFinish({...e}).then(y),t.lastUpdateTime({...e}).then(y)]);return e=>a.mul(Math.max(0,s-(n.isZero()?r:e)))}async getRemainingLiquidityMiningLQTYReward(e){const[t,n]=await Promise.all([this._getRemainingLiquidityMiningLQTYRewardCalculator(e),i._getBlockTimestamp(this.connection,null===e||void 0===e?void 0:e.blockTag)]);return t(n)}getLiquidityMiningStake(e,t){null!==e&&void 0!==e||(e=i._requireAddress(this.connection));const{unipool:n}=i._getContracts(this.connection);return n.balanceOf(e,{...t}).then(p)}getTotalStakedUniTokens(e){const{unipool:t}=i._getContracts(this.connection);return t.totalSupply({...e}).then(p)}getLiquidityMiningLQTYReward(e,t){null!==e&&void 0!==e||(e=i._requireAddress(this.connection));const{unipool:n}=i._getContracts(this.connection);return n.earned(e,{...t}).then(p)}getCollateralSurplusBalance(e,t){null!==e&&void 0!==e||(e=i._requireAddress(this.connection));const{collSurplusPool:n}=i._getContracts(this.connection);return n.getCollateral(e,{...t}).then(p)}async getTroves(e,t){var n,a;const{multiTroveGetter:s}=i._getContracts(this.connection);if(T(e,"first"),T(e,"startingAt"),!m.includes(e.sortedBy))throw new Error("sortedBy must be one of: "+m.map(e=>`"${e}"`).join(", "));const[r,o]=await Promise.all([e.beforeRedistribution?void 0:this.getTotalRedistributed({...t}),s.getMultipleSortedTroves("descendingCollateralRatio"===e.sortedBy?null!==(n=e.startingAt)&&void 0!==n?n:0:-((null!==(a=e.startingAt)&&void 0!==a?a:0)+1),e.first,{...t})]),u=f(o);return r?u.map(e=>e.applyRedistribution(r)):u}async _getFeesFactory(e){const{troveManager:t}=i._getContracts(this.connection),[n,s]=await Promise.all([t.lastFeeOperationTime({...e}),t.baseRate({...e}).then(p)]);return(e,t)=>new a.Fees(s,r,o,c(n.toNumber()),c(e),t)}async getFees(e){const[t,n,a,s]=await Promise.all([this._getFeesFactory(e),this.getTotal(e),this.getPrice(e),i._getBlockTimestamp(this.connection,null===e||void 0===e?void 0:e.blockTag)]);return t(s,n.collateralRatioIsBelowCritical(a))}async getLQTYStake(e,t){null!==e&&void 0!==e||(e=i._requireAddress(this.connection));const{lqtyStaking:n}=i._getContracts(this.connection),[s,r,o]=await Promise.all([n.stakes(e,{...t}),n.getPendingETHGain(e,{...t}),n.getPendingLUSDGain(e,{...t})].map(e=>e.then(p)));return new a.LQTYStake(s,r,o)}async getTotalStakedLQTY(e){const{lqtyStaking:t}=i._getContracts(this.connection);return t.totalLQTYStaked({...e}).then(p)}async getFrontendStatus(e,t){null!==e&&void 0!==e||(e=i._requireFrontendAddress(this.connection));const{stabilityPool:n}=i._getContracts(this.connection),{registered:a,kickbackRate:s}=await n.frontEnds(e,{...t});return a?{status:"registered",kickbackRate:p(s)}:{status:"unregistered"}}}t.ReadableEthersLiquity=b;const f=e=>e.map(e=>new a.TroveWithPendingRedistribution(e.owner,"open",p(e.coll),p(e.debt),p(e.stake),new a.Trove(p(e.snapshotETH),p(e.snapshotLUSDDebt))));class h{constructor(e){this._store=e}_blockHit(e){return!e||void 0===e.blockTag||e.blockTag===this._store.state.blockTag}_userHit(e,t){return this._blockHit(t)&&(void 0===e||e===this._store.connection.userAddress)}_frontendHit(e,t){return this._blockHit(t)&&(void 0===e||e===this._store.connection.frontendTag)}getTotalRedistributed(e){if(this._blockHit(e))return this._store.state.totalRedistributed}getTroveBeforeRedistribution(e,t){if(this._userHit(e,t))return this._store.state.troveBeforeRedistribution}getTrove(e,t){if(this._userHit(e,t))return this._store.state.trove}getNumberOfTroves(e){if(this._blockHit(e))return this._store.state.numberOfTroves}getPrice(e){if(this._blockHit(e))return this._store.state.price}getTotal(e){if(this._blockHit(e))return this._store.state.total}getStabilityDeposit(e,t){if(this._userHit(e,t))return this._store.state.stabilityDeposit}getRemainingStabilityPoolLQTYReward(e){if(this._blockHit(e))return this._store.state.remainingStabilityPoolLQTYReward}getLUSDInStabilityPool(e){if(this._blockHit(e))return this._store.state.lusdInStabilityPool}getLUSDBalance(e,t){if(this._userHit(e,t))return this._store.state.lusdBalance}getLQTYBalance(e,t){if(this._userHit(e,t))return this._store.state.lqtyBalance}getUniTokenBalance(e,t){if(this._userHit(e,t))return this._store.state.uniTokenBalance}getUniTokenAllowance(e,t){if(this._userHit(e,t))return this._store.state.uniTokenAllowance}getRemainingLiquidityMiningLQTYReward(e){if(this._blockHit(e))return this._store.state.remainingLiquidityMiningLQTYReward}getLiquidityMiningStake(e,t){if(this._userHit(e,t))return this._store.state.liquidityMiningStake}getTotalStakedUniTokens(e){if(this._blockHit(e))return this._store.state.totalStakedUniTokens}getLiquidityMiningLQTYReward(e,t){if(this._userHit(e,t))return this._store.state.liquidityMiningLQTYReward}getCollateralSurplusBalance(e,t){if(this._userHit(e,t))return this._store.state.collateralSurplusBalance}getFees(e){if(this._blockHit(e))return this._store.state.fees}getLQTYStake(e,t){if(this._userHit(e,t))return this._store.state.lqtyStake}getTotalStakedLQTY(e){if(this._blockHit(e))return this._store.state.totalStakedLQTY}getFrontendStatus(e,t){if(this._frontendHit(e,t))return this._store.state.frontend}getTroves(){}}class _ extends a._CachedReadableLiquity{constructor(e){const t=new s.BlockPolledLiquityStore(e);super(e,new h(t)),this.store=t,this.connection=e.connection}hasStore(e){return void 0===e||"blockPolled"===e}_getActivePool(){throw new Error("Method not implemented.")}_getDefaultPool(){throw new Error("Method not implemented.")}_getFeesFactory(){throw new Error("Method not implemented.")}_getRemainingLiquidityMiningLQTYRewardCalculator(){throw new Error("Method not implemented.")}}},"8b28":function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newActivePoolAddress","type":"address"}],"name":"ActivePoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newBorrowerOperationsAddress","type":"address"}],"name":"BorrowerOperationsAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_account","type":"address"},{"indexed":false,"internalType":"uint256","name":"_newBalance","type":"uint256"}],"name":"CollBalanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"EtherSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newTroveManagerAddress","type":"address"}],"name":"TroveManagerAddressChanged","type":"event"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"accountSurplus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"activePoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"borrowerOperationsAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"claimColl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"}],"name":"getCollateral","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrowerOperationsAddress","type":"address"},{"internalType":"address","name":"_troveManagerAddress","type":"address"},{"internalType":"address","name":"_activePoolAddress","type":"address"}],"name":"setAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"troveManagerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"stateMutability":"payable","type":"receive"}]')},"8c83":function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_borrowerOperationsAddress","type":"address"}],"name":"BorrowerOperationsAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_id","type":"address"},{"indexed":false,"internalType":"uint256","name":"_NICR","type":"uint256"}],"name":"NodeAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_id","type":"address"}],"name":"NodeRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_sortedDoublyLLAddress","type":"address"}],"name":"SortedTrovesAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_troveManagerAddress","type":"address"}],"name":"TroveManagerAddressChanged","type":"event"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"borrowerOperationsAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_id","type":"address"}],"name":"contains","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"data","outputs":[{"internalType":"address","name":"head","type":"address"},{"internalType":"address","name":"tail","type":"address"},{"internalType":"uint256","name":"maxSize","type":"uint256"},{"internalType":"uint256","name":"size","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_NICR","type":"uint256"},{"internalType":"address","name":"_prevId","type":"address"},{"internalType":"address","name":"_nextId","type":"address"}],"name":"findInsertPosition","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getFirst","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLast","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMaxSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_id","type":"address"}],"name":"getNext","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_id","type":"address"}],"name":"getPrev","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getSize","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_id","type":"address"},{"internalType":"uint256","name":"_NICR","type":"uint256"},{"internalType":"address","name":"_prevId","type":"address"},{"internalType":"address","name":"_nextId","type":"address"}],"name":"insert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isEmpty","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isFull","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_id","type":"address"},{"internalType":"uint256","name":"_newNICR","type":"uint256"},{"internalType":"address","name":"_prevId","type":"address"},{"internalType":"address","name":"_nextId","type":"address"}],"name":"reInsert","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_id","type":"address"}],"name":"remove","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_size","type":"uint256"},{"internalType":"address","name":"_troveManagerAddress","type":"address"},{"internalType":"address","name":"_borrowerOperationsAddress","type":"address"}],"name":"setParams","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"troveManager","outputs":[{"internalType":"contract ITroveManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_NICR","type":"uint256"},{"internalType":"address","name":"_prevId","type":"address"},{"internalType":"address","name":"_nextId","type":"address"}],"name":"validInsertPosition","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}]')},"8fa9":function(e,t,n){"use strict";n.r(t),n.d(t,"BigNumber",(function(){return m})),n.d(t,"formatFixed",(function(){return L})),n.d(t,"FixedFormat",(function(){return C})),n.d(t,"FixedNumber",(function(){return k})),n.d(t,"parseFixed",(function(){return x})),n.d(t,"_base16To36",(function(){return v})),n.d(t,"_base36To16",(function(){return _}));var a=n("399f"),i=n.n(a),s=n("549e"),r=n("ffb2");const o="bignumber/5.0.15";var u=i.a.BN;const d=new r["b"](o),l={},p=9007199254740991;function y(e){return null!=e&&(m.isBigNumber(e)||"number"===typeof e&&e%1===0||"string"===typeof e&&!!e.match(/^-?[0-9]+$/)||Object(s["l"])(e)||"bigint"===typeof e||Object(s["j"])(e))}let c=!1;class m{constructor(e,t){d.checkNew(new.target,m),e!==l&&d.throwError("cannot call constructor directly; use BigNumber.from",r["b"].errors.UNSUPPORTED_OPERATION,{operation:"new (BigNumber)"}),this._hex=t,this._isBigNumber=!0,Object.freeze(this)}fromTwos(e){return b(f(this).fromTwos(e))}toTwos(e){return b(f(this).toTwos(e))}abs(){return"-"===this._hex[0]?m.from(this._hex.substring(1)):this}add(e){return b(f(this).add(f(e)))}sub(e){return b(f(this).sub(f(e)))}div(e){const t=m.from(e);return t.isZero()&&h("division by zero","div"),b(f(this).div(f(e)))}mul(e){return b(f(this).mul(f(e)))}mod(e){const t=f(e);return t.isNeg()&&h("cannot modulo negative values","mod"),b(f(this).umod(t))}pow(e){const t=f(e);return t.isNeg()&&h("cannot raise to negative values","pow"),b(f(this).pow(t))}and(e){const t=f(e);return(this.isNegative()||t.isNeg())&&h("cannot 'and' negative values","and"),b(f(this).and(t))}or(e){const t=f(e);return(this.isNegative()||t.isNeg())&&h("cannot 'or' negative values","or"),b(f(this).or(t))}xor(e){const t=f(e);return(this.isNegative()||t.isNeg())&&h("cannot 'xor' negative values","xor"),b(f(this).xor(t))}mask(e){return(this.isNegative()||e<0)&&h("cannot mask negative values","mask"),b(f(this).maskn(e))}shl(e){return(this.isNegative()||e<0)&&h("cannot shift negative values","shl"),b(f(this).shln(e))}shr(e){return(this.isNegative()||e<0)&&h("cannot shift negative values","shr"),b(f(this).shrn(e))}eq(e){return f(this).eq(f(e))}lt(e){return f(this).lt(f(e))}lte(e){return f(this).lte(f(e))}gt(e){return f(this).gt(f(e))}gte(e){return f(this).gte(f(e))}isNegative(){return"-"===this._hex[0]}isZero(){return f(this).isZero()}toNumber(){try{return f(this).toNumber()}catch(e){h("overflow","toNumber",this.toString())}return null}toString(){return arguments.length>0&&(10===arguments[0]?c||(c=!0,d.warn("BigNumber.toString does not accept any parameters; base-10 is assumed")):16===arguments[0]?d.throwError("BigNumber.toString does not accept any parameters; use bigNumber.toHexString()",r["b"].errors.UNEXPECTED_ARGUMENT,{}):d.throwError("BigNumber.toString does not accept parameters",r["b"].errors.UNEXPECTED_ARGUMENT,{})),f(this).toString(10)}toHexString(){return this._hex}toJSON(e){return{type:"BigNumber",hex:this.toHexString()}}static from(e){if(e instanceof m)return e;if("string"===typeof e)return e.match(/^-?0x[0-9a-f]+$/i)?new m(l,T(e)):e.match(/^-?[0-9]+$/)?new m(l,T(new u(e))):d.throwArgumentError("invalid BigNumber string","value",e);if("number"===typeof e)return e%1&&h("underflow","BigNumber.from",e),(e>=p||e<=-p)&&h("overflow","BigNumber.from",e),m.from(String(e));const t=e;if("bigint"===typeof t)return m.from(t.toString());if(Object(s["j"])(t))return m.from(Object(s["i"])(t));if(t)if(t.toHexString){const e=t.toHexString();if("string"===typeof e)return m.from(e)}else{let e=t._hex;if(null==e&&"BigNumber"===t.type&&(e=t.hex),"string"===typeof e&&(Object(s["l"])(e)||"-"===e[0]&&Object(s["l"])(e.substring(1))))return m.from(e)}return d.throwArgumentError("invalid BigNumber value","value",e)}static isBigNumber(e){return!(!e||!e._isBigNumber)}}function T(e){if("string"!==typeof e)return T(e.toString(16));if("-"===e[0])return e=e.substring(1),"-"===e[0]&&d.throwArgumentError("invalid hex","value",e),e=T(e),"0x00"===e?e:"-"+e;if("0x"!==e.substring(0,2)&&(e="0x"+e),"0x"===e)return"0x00";e.length%2&&(e="0x0"+e.substring(2));while(e.length>4&&"0x00"===e.substring(0,4))e="0x"+e.substring(4);return e}function b(e){return m.from(T(e))}function f(e){const t=m.from(e).toHexString();return"-"===t[0]?new u("-"+t.substring(3),16):new u(t.substring(2),16)}function h(e,t,n){const a={fault:e,operation:t};return null!=n&&(a.value=n),d.throwError(e,r["b"].errors.NUMERIC_FAULT,a)}function _(e){return new u(e,36).toString(16)}function v(e){return new u(e,16).toString(36)}const g=new r["b"](o),w={},S=m.from(0),M=m.from(-1);function D(e,t,n,a){const i={fault:t,operation:n};return void 0!==a&&(i.value=a),g.throwError(e,r["b"].errors.NUMERIC_FAULT,i)}let A="0";while(A.length<256)A+=A;function E(e){if("number"!==typeof e)try{e=m.from(e).toNumber()}catch(t){}return"number"===typeof e&&e>=0&&e<=256&&!(e%1)?"1"+A.substring(0,e):g.throwArgumentError("invalid decimal size","decimals",e)}function L(e,t){null==t&&(t=0);const n=E(t);e=m.from(e);const a=e.lt(S);a&&(e=e.mul(M));let i=e.mod(n).toString();while(i.length<n.length-1)i="0"+i;i=i.match(/^([0-9]*[1-9]|0)(0*)/)[1];const s=e.div(n).toString();return e=s+"."+i,a&&(e="-"+e),e}function x(e,t){null==t&&(t=0);const n=E(t);if("string"===typeof e&&e.match(/^-?[0-9.,]+$/)||g.throwArgumentError("invalid decimal value","value",e),n.length-1===0)return m.from(e);const a="-"===e.substring(0,1);a&&(e=e.substring(1)),"."===e&&g.throwArgumentError("missing value","value",e);const i=e.split(".");i.length>2&&g.throwArgumentError("too many decimal points","value",e);let s=i[0],r=i[1];s||(s="0"),r||(r="0"),r.length>n.length-1&&D("fractional component exceeds decimals","underflow","parseFixed");while(r.length<n.length-1)r+="0";const o=m.from(s),u=m.from(r);let d=o.mul(n).add(u);return a&&(d=d.mul(M)),d}class C{constructor(e,t,n,a){e!==w&&g.throwError("cannot use FixedFormat constructor; use FixedFormat.from",r["b"].errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.signed=t,this.width=n,this.decimals=a,this.name=(t?"":"u")+"fixed"+String(n)+"x"+String(a),this._multiplier=E(a),Object.freeze(this)}static from(e){if(e instanceof C)return e;let t=!0,n=128,a=18;if("string"===typeof e){if("fixed"===e);else if("ufixed"===e)t=!1;else if(null!=e){const i=e.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);i||g.throwArgumentError("invalid fixed format","format",e),t="u"!==i[1],n=parseInt(i[2]),a=parseInt(i[3])}}else if(e){const i=(t,n,a)=>null==e[t]?a:(typeof e[t]!==n&&g.throwArgumentError("invalid fixed format ("+t+" not "+n+")","format."+t,e[t]),e[t]);t=i("signed","boolean",t),n=i("width","number",n),a=i("decimals","number",a)}return n%8&&g.throwArgumentError("invalid fixed format width (not byte aligned)","format.width",n),a>80&&g.throwArgumentError("invalid fixed format (decimals too large)","format.decimals",a),new C(w,t,n,a)}}class k{constructor(e,t,n,a){g.checkNew(new.target,k),e!==w&&g.throwError("cannot use FixedNumber constructor; use FixedNumber.from",r["b"].errors.UNSUPPORTED_OPERATION,{operation:"new FixedFormat"}),this.format=a,this._hex=t,this._value=n,this._isFixedNumber=!0,Object.freeze(this)}_checkFormat(e){this.format.name!==e.format.name&&g.throwArgumentError("incompatible format; use fixedNumber.toFormat","other",e)}addUnsafe(e){this._checkFormat(e);const t=x(this._value,this.format.decimals),n=x(e._value,e.format.decimals);return k.fromValue(t.add(n),this.format.decimals,this.format)}subUnsafe(e){this._checkFormat(e);const t=x(this._value,this.format.decimals),n=x(e._value,e.format.decimals);return k.fromValue(t.sub(n),this.format.decimals,this.format)}mulUnsafe(e){this._checkFormat(e);const t=x(this._value,this.format.decimals),n=x(e._value,e.format.decimals);return k.fromValue(t.mul(n).div(this.format._multiplier),this.format.decimals,this.format)}divUnsafe(e){this._checkFormat(e);const t=x(this._value,this.format.decimals),n=x(e._value,e.format.decimals);return k.fromValue(t.mul(this.format._multiplier).div(n),this.format.decimals,this.format)}floor(){let e=this.toString().split("."),t=k.from(e[0],this.format);const n=!e[1].match(/^(0*)$/);return this.isNegative()&&n&&(t=t.subUnsafe(R)),t}ceiling(){let e=this.toString().split("."),t=k.from(e[0],this.format);const n=!e[1].match(/^(0*)$/);return!this.isNegative()&&n&&(t=t.addUnsafe(R)),t}round(e){null==e&&(e=0);let t=this.toString().split(".");if((e<0||e>80||e%1)&&g.throwArgumentError("invalid decimal count","decimals",e),t[1].length<=e)return this;const n=k.from("1"+A.substring(0,e));return this.mulUnsafe(n).addUnsafe(P).floor().divUnsafe(n)}isZero(){return"0.0"===this._value}isNegative(){return"-"===this._value[0]}toString(){return this._value}toHexString(e){if(null==e)return this._hex;e%8&&g.throwArgumentError("invalid byte width","width",e);const t=m.from(this._hex).fromTwos(this.format.width).toTwos(e).toHexString();return Object(s["h"])(t,e/8)}toUnsafeFloat(){return parseFloat(this.toString())}toFormat(e){return k.fromString(this._value,e)}static fromValue(e,t,n){return null!=n||null==t||y(t)||(n=t,t=null),null==t&&(t=0),null==n&&(n="fixed"),k.fromString(L(e,t),C.from(n))}static fromString(e,t){null==t&&(t="fixed");const n=C.from(t),a=x(e,n.decimals);!n.signed&&a.lt(S)&&D("unsigned value cannot be negative","overflow","value",e);let i=null;n.signed?i=a.toTwos(n.width).toHexString():(i=a.toHexString(),i=Object(s["h"])(i,n.width/8));const r=L(a,n.decimals);return new k(w,i,r,n)}static fromBytes(e,t){null==t&&(t="fixed");const n=C.from(t);if(Object(s["a"])(e).length>n.width/8)throw new Error("overflow");let a=m.from(e);n.signed&&(a=a.fromTwos(n.width));const i=a.toTwos((n.signed?0:1)+n.width).toHexString(),r=L(a,n.decimals);return new k(w,i,r,n)}static from(e,t){if("string"===typeof e)return k.fromString(e,t);if(Object(s["j"])(e))return k.fromBytes(e,t);try{return k.fromValue(e,0,t)}catch(n){if(n.code!==r["b"].errors.INVALID_ARGUMENT)throw n}return g.throwArgumentError("invalid FixedNumber value","value",e)}static isFixedNumber(e){return!(!e||!e._isFixedNumber)}}const R=k.from(1),P=k.from("0.5")},"92c3":function(e){e.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"_troveManagerAddress","type":"address"},{"internalType":"address","name":"_stabilityPoolAddress","type":"address"},{"internalType":"address","name":"_borrowerOperationsAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newBorrowerOperationsAddress","type":"address"}],"name":"BorrowerOperationsAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_user","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"LUSDTokenBalanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newStabilityPoolAddress","type":"address"}],"name":"StabilityPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_troveManagerAddress","type":"address"}],"name":"TroveManagerAddressChanged","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"borrowerOperationsAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"permitTypeHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_poolAddress","type":"address"},{"internalType":"address","name":"_receiver","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"returnFromPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"address","name":"_poolAddress","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"sendToPool","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stabilityPoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"troveManagerAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},"931b":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.EthersLiquity=t.EthersTransactionFailedError=void 0;const a=n("b565"),i=n("4b5c"),s=n("4285"),r=n("88d5"),o=n("aacf");class u extends a.TransactionFailedError{constructor(e,t){super("EthersTransactionFailedError",e,t)}}t.EthersTransactionFailedError=u;const d=async e=>{const t=await e.waitForReceipt();if("succeeded"!==t.status)throw new u("Transaction failed",t);return t.details};class l{constructor(e){this._readable=e,this.connection=e.connection,this.populate=new s.PopulatableEthersLiquity(e),this.send=new o.SendableEthersLiquity(this.populate)}static _from(e){return i._usingStore(e)?new p(r.ReadableEthersLiquity._from(e)):new l(r.ReadableEthersLiquity._from(e))}static async connect(e,t){return l._from(await i._connect(e,t))}hasStore(){return!1}getTotalRedistributed(e){return this._readable.getTotalRedistributed(e)}getTroveBeforeRedistribution(e,t){return this._readable.getTroveBeforeRedistribution(e,t)}getTrove(e,t){return this._readable.getTrove(e,t)}getNumberOfTroves(e){return this._readable.getNumberOfTroves(e)}getPrice(e){return this._readable.getPrice(e)}_getActivePool(e){return this._readable._getActivePool(e)}_getDefaultPool(e){return this._readable._getDefaultPool(e)}getTotal(e){return this._readable.getTotal(e)}getStabilityDeposit(e,t){return this._readable.getStabilityDeposit(e,t)}getRemainingStabilityPoolLQTYReward(e){return this._readable.getRemainingStabilityPoolLQTYReward(e)}getLUSDInStabilityPool(e){return this._readable.getLUSDInStabilityPool(e)}getLUSDBalance(e,t){return this._readable.getLUSDBalance(e,t)}getLQTYBalance(e,t){return this._readable.getLQTYBalance(e,t)}getUniTokenBalance(e,t){return this._readable.getUniTokenBalance(e,t)}getUniTokenAllowance(e,t){return this._readable.getUniTokenAllowance(e,t)}_getRemainingLiquidityMiningLQTYRewardCalculator(e){return this._readable._getRemainingLiquidityMiningLQTYRewardCalculator(e)}getRemainingLiquidityMiningLQTYReward(e){return this._readable.getRemainingLiquidityMiningLQTYReward(e)}getLiquidityMiningStake(e,t){return this._readable.getLiquidityMiningStake(e,t)}getTotalStakedUniTokens(e){return this._readable.getTotalStakedUniTokens(e)}getLiquidityMiningLQTYReward(e,t){return this._readable.getLiquidityMiningLQTYReward(e,t)}getCollateralSurplusBalance(e,t){return this._readable.getCollateralSurplusBalance(e,t)}getTroves(e,t){return this._readable.getTroves(e,t)}_getFeesFactory(e){return this._readable._getFeesFactory(e)}getFees(e){return this._readable.getFees(e)}getLQTYStake(e,t){return this._readable.getLQTYStake(e,t)}getTotalStakedLQTY(e){return this._readable.getTotalStakedLQTY(e)}getFrontendStatus(e,t){return this._readable.getFrontendStatus(e,t)}openTrove(e,t,n){return this.send.openTrove(e,t,n).then(d)}closeTrove(e){return this.send.closeTrove(e).then(d)}adjustTrove(e,t,n){return this.send.adjustTrove(e,t,n).then(d)}depositCollateral(e,t){return this.send.depositCollateral(e,t).then(d)}withdrawCollateral(e,t){return this.send.withdrawCollateral(e,t).then(d)}borrowLUSD(e,t,n){return this.send.borrowLUSD(e,t,n).then(d)}repayLUSD(e,t){return this.send.repayLUSD(e,t).then(d)}setPrice(e,t){return this.send.setPrice(e,t).then(d)}liquidate(e,t){return this.send.liquidate(e,t).then(d)}liquidateUpTo(e,t){return this.send.liquidateUpTo(e,t).then(d)}depositLUSDInStabilityPool(e,t,n){return this.send.depositLUSDInStabilityPool(e,t,n).then(d)}withdrawLUSDFromStabilityPool(e,t){return this.send.withdrawLUSDFromStabilityPool(e,t).then(d)}withdrawGainsFromStabilityPool(e){return this.send.withdrawGainsFromStabilityPool(e).then(d)}transferCollateralGainToTrove(e){return this.send.transferCollateralGainToTrove(e).then(d)}sendLUSD(e,t,n){return this.send.sendLUSD(e,t,n).then(d)}sendLQTY(e,t,n){return this.send.sendLQTY(e,t,n).then(d)}redeemLUSD(e,t,n){return this.send.redeemLUSD(e,t,n).then(d)}claimCollateralSurplus(e){return this.send.claimCollateralSurplus(e).then(d)}stakeLQTY(e,t){return this.send.stakeLQTY(e,t).then(d)}unstakeLQTY(e,t){return this.send.unstakeLQTY(e,t).then(d)}withdrawGainsFromStaking(e){return this.send.withdrawGainsFromStaking(e).then(d)}registerFrontend(e,t){return this.send.registerFrontend(e,t).then(d)}_mintUniToken(e,t,n){return this.send._mintUniToken(e,t,n).then(d)}approveUniTokens(e,t){return this.send.approveUniTokens(e,t).then(d)}stakeUniTokens(e,t){return this.send.stakeUniTokens(e,t).then(d)}unstakeUniTokens(e,t){return this.send.unstakeUniTokens(e,t).then(d)}withdrawLQTYRewardFromLiquidityMining(e){return this.send.withdrawLQTYRewardFromLiquidityMining(e).then(d)}exitLiquidityMining(e){return this.send.exitLiquidityMining(e).then(d)}}t.EthersLiquity=l;class p extends l{constructor(e){super(e),this.store=e.store}hasStore(e){return void 0===e||e===this.connection.useStore}}},"978b":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},"9b89":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},a461:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},a476:function(e){e.exports=JSON.parse('[{"inputs":[{"internalType":"contract TroveManager","name":"_troveManager","type":"address"},{"internalType":"contract ISortedTroves","name":"_sortedTroves","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"int256","name":"_startIdx","type":"int256"},{"internalType":"uint256","name":"_count","type":"uint256"}],"name":"getMultipleSortedTroves","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"debt","type":"uint256"},{"internalType":"uint256","name":"coll","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"uint256","name":"snapshotETH","type":"uint256"},{"internalType":"uint256","name":"snapshotLUSDDebt","type":"uint256"}],"internalType":"struct MultiTroveGetter.CombinedTroveData[]","name":"_troves","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"sortedTroves","outputs":[{"internalType":"contract ISortedTroves","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"troveManager","outputs":[{"internalType":"contract TroveManager","name":"","type":"address"}],"stateMutability":"view","type":"function"}]')},a86d:function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_lastGoodPrice","type":"uint256"}],"name":"LastGoodPriceUpdated","type":"event"},{"inputs":[],"name":"fetchPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"getPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"price","type":"uint256"}],"name":"setPrice","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]')},a9af:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0})},aacf:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SendableEthersLiquity=void 0;const a=e=>e.send();class i{constructor(e){this._populate=e}openTrove(e,t,n){return this._populate.openTrove(e,t,n).then(a)}closeTrove(e){return this._populate.closeTrove(e).then(a)}adjustTrove(e,t,n){return this._populate.adjustTrove(e,t,n).then(a)}depositCollateral(e,t){return this._populate.depositCollateral(e,t).then(a)}withdrawCollateral(e,t){return this._populate.withdrawCollateral(e,t).then(a)}borrowLUSD(e,t,n){return this._populate.borrowLUSD(e,t,n).then(a)}repayLUSD(e,t){return this._populate.repayLUSD(e,t).then(a)}setPrice(e,t){return this._populate.setPrice(e,t).then(a)}liquidate(e,t){return this._populate.liquidate(e,t).then(a)}liquidateUpTo(e,t){return this._populate.liquidateUpTo(e,t).then(a)}depositLUSDInStabilityPool(e,t,n){return this._populate.depositLUSDInStabilityPool(e,t,n).then(a)}withdrawLUSDFromStabilityPool(e,t){return this._populate.withdrawLUSDFromStabilityPool(e,t).then(a)}withdrawGainsFromStabilityPool(e){return this._populate.withdrawGainsFromStabilityPool(e).then(a)}transferCollateralGainToTrove(e){return this._populate.transferCollateralGainToTrove(e).then(a)}sendLUSD(e,t,n){return this._populate.sendLUSD(e,t,n).then(a)}sendLQTY(e,t,n){return this._populate.sendLQTY(e,t,n).then(a)}redeemLUSD(e,t,n){return this._populate.redeemLUSD(e,t,n).then(a)}claimCollateralSurplus(e){return this._populate.claimCollateralSurplus(e).then(a)}stakeLQTY(e,t){return this._populate.stakeLQTY(e,t).then(a)}unstakeLQTY(e,t){return this._populate.unstakeLQTY(e,t).then(a)}withdrawGainsFromStaking(e){return this._populate.withdrawGainsFromStaking(e).then(a)}registerFrontend(e,t){return this._populate.registerFrontend(e,t).then(a)}_mintUniToken(e,t,n){return this._populate._mintUniToken(e,t,n).then(a)}approveUniTokens(e,t){return this._populate.approveUniTokens(e,t).then(a)}stakeUniTokens(e,t){return this._populate.stakeUniTokens(e,t).then(a)}unstakeUniTokens(e,t){return this._populate.unstakeUniTokens(e,t).then(a)}withdrawLQTYRewardFromLiquidityMining(e){return this._populate.withdrawLQTYRewardFromLiquidityMining(e).then(a)}exitLiquidityMining(e){return this._populate.exitLiquidityMining(e).then(a)}}t.SendableEthersLiquity=i},b565:function(e,t,n){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),i=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||a(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),i(n("ea52"),t),i(n("cdef"),t),i(n("f659"),t),i(n("b62e"),t),i(n("464b"),t),i(n("c45c"),t),i(n("a461"),t),i(n("a9af"),t),i(n("d2f7"),t),i(n("f43f"),t),i(n("9b89"),t),i(n("ddc8"),t),i(n("469b"),t)},b62e:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.StabilityDeposit=void 0;const a=n("cdef");class i{constructor(e,t,n,a,i){if(this.initialLUSD=e,this.currentLUSD=t,this.collateralGain=n,this.lqtyReward=a,this.frontendTag=i,this.currentLUSD.gt(this.initialLUSD))throw new Error("currentLUSD can't be greater than initialLUSD")}get isEmpty(){return this.initialLUSD.isZero&&this.currentLUSD.isZero&&this.collateralGain.isZero&&this.lqtyReward.isZero}toString(){return"{ initialLUSD: "+this.initialLUSD+", currentLUSD: "+this.currentLUSD+", collateralGain: "+this.collateralGain+", lqtyReward: "+this.lqtyReward+`, frontendTag: "${this.frontendTag}" }`}equals(e){return this.initialLUSD.eq(e.initialLUSD)&&this.currentLUSD.eq(e.currentLUSD)&&this.collateralGain.eq(e.collateralGain)&&this.lqtyReward.eq(e.lqtyReward)&&this.frontendTag===e.frontendTag}whatChanged(e){return e=a.Decimal.from(e),e.lt(this.currentLUSD)?{withdrawLUSD:this.currentLUSD.sub(e),withdrawAllLUSD:e.isZero}:e.gt(this.currentLUSD)?{depositLUSD:e.sub(this.currentLUSD)}:void 0}apply(e){return e?void 0!==e.withdrawLUSD?e.withdrawAllLUSD||this.currentLUSD.lte(e.withdrawLUSD)?a.Decimal.ZERO:this.currentLUSD.sub(e.withdrawLUSD):this.currentLUSD.add(e.depositLUSD):this.currentLUSD}}t.StabilityDeposit=i},b96e:function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newActivePoolAddress","type":"address"}],"name":"ActivePoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newBorrowerOperationsAddress","type":"address"}],"name":"BorrowerOperationsAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newCommunityIssuanceAddress","type":"address"}],"name":"CommunityIssuanceAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newDefaultPoolAddress","type":"address"}],"name":"DefaultPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"_P","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_S","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_G","type":"uint256"}],"name":"DepositSnapshotUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"_ETH","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_LUSDLoss","type":"uint256"}],"name":"ETHGainWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint128","name":"_currentEpoch","type":"uint128"}],"name":"EpochUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_to","type":"address"},{"indexed":false,"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"EtherSent","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_frontEnd","type":"address"},{"indexed":false,"internalType":"uint256","name":"_kickbackRate","type":"uint256"}],"name":"FrontEndRegistered","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_frontEnd","type":"address"},{"indexed":false,"internalType":"uint256","name":"_P","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_G","type":"uint256"}],"name":"FrontEndSnapshotUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_frontEnd","type":"address"},{"indexed":false,"internalType":"uint256","name":"_newFrontEndStake","type":"uint256"},{"indexed":false,"internalType":"address","name":"_depositor","type":"address"}],"name":"FrontEndStakeChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_depositor","type":"address"},{"indexed":true,"internalType":"address","name":"_frontEnd","type":"address"}],"name":"FrontEndTagSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_G","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"_epoch","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"_scale","type":"uint128"}],"name":"G_Updated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"_LQTY","type":"uint256"}],"name":"LQTYPaidToDepositor","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_frontEnd","type":"address"},{"indexed":false,"internalType":"uint256","name":"_LQTY","type":"uint256"}],"name":"LQTYPaidToFrontEnd","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newLUSDTokenAddress","type":"address"}],"name":"LUSDTokenAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_P","type":"uint256"}],"name":"P_Updated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newPriceFeedAddress","type":"address"}],"name":"PriceFeedAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_S","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"_epoch","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"_scale","type":"uint128"}],"name":"S_Updated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint128","name":"_currentScale","type":"uint128"}],"name":"ScaleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newSortedTrovesAddress","type":"address"}],"name":"SortedTrovesAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBalance","type":"uint256"}],"name":"StabilityPoolETHBalanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newBalance","type":"uint256"}],"name":"StabilityPoolLUSDBalanceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newTroveManagerAddress","type":"address"}],"name":"TroveManagerAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_depositor","type":"address"},{"indexed":false,"internalType":"uint256","name":"_newDeposit","type":"uint256"}],"name":"UserDepositChanged","type":"event"},{"inputs":[],"name":"BORROWING_FEE_FLOOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CCR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DECIMAL_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LUSD_GAS_COMPENSATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MCR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_NET_DEBT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"P","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERCENT_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SCALE_FACTOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_100pct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activePool","outputs":[{"internalType":"contract IActivePool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"borrowerOperations","outputs":[{"internalType":"contract IBorrowerOperations","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"communityIssuance","outputs":[{"internalType":"contract ICommunityIssuance","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentEpoch","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentScale","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"defaultPool","outputs":[{"internalType":"contract IDefaultPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"depositSnapshots","outputs":[{"internalType":"uint256","name":"S","type":"uint256"},{"internalType":"uint256","name":"P","type":"uint256"},{"internalType":"uint256","name":"G","type":"uint256"},{"internalType":"uint128","name":"scale","type":"uint128"},{"internalType":"uint128","name":"epoch","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"deposits","outputs":[{"internalType":"uint256","name":"initialValue","type":"uint256"},{"internalType":"address","name":"frontEndTag","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint128","name":"","type":"uint128"},{"internalType":"uint128","name":"","type":"uint128"}],"name":"epochToScaleToG","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint128","name":"","type":"uint128"},{"internalType":"uint128","name":"","type":"uint128"}],"name":"epochToScaleToSum","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"frontEndSnapshots","outputs":[{"internalType":"uint256","name":"S","type":"uint256"},{"internalType":"uint256","name":"P","type":"uint256"},{"internalType":"uint256","name":"G","type":"uint256"},{"internalType":"uint128","name":"scale","type":"uint128"},{"internalType":"uint128","name":"epoch","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"frontEndStakes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"frontEnds","outputs":[{"internalType":"uint256","name":"kickbackRate","type":"uint256"},{"internalType":"bool","name":"registered","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_frontEnd","type":"address"}],"name":"getCompoundedFrontEndStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_depositor","type":"address"}],"name":"getCompoundedLUSDDeposit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_depositor","type":"address"}],"name":"getDepositorETHGain","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_depositor","type":"address"}],"name":"getDepositorLQTYGain","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEntireSystemColl","outputs":[{"internalType":"uint256","name":"entireSystemColl","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEntireSystemDebt","outputs":[{"internalType":"uint256","name":"entireSystemDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_frontEnd","type":"address"}],"name":"getFrontEndLQTYGain","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTotalLUSDDeposits","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastETHError_Offset","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastLQTYError","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastLUSDLossError_Offset","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lusdToken","outputs":[{"internalType":"contract ILUSDToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_debtToOffset","type":"uint256"},{"internalType":"uint256","name":"_collToAdd","type":"uint256"}],"name":"offset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"contract IPriceFeed","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_frontEndTag","type":"address"}],"name":"provideToSP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_kickbackRate","type":"uint256"}],"name":"registerFrontEnd","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_borrowerOperationsAddress","type":"address"},{"internalType":"address","name":"_troveManagerAddress","type":"address"},{"internalType":"address","name":"_activePoolAddress","type":"address"},{"internalType":"address","name":"_lusdTokenAddress","type":"address"},{"internalType":"address","name":"_sortedTrovesAddress","type":"address"},{"internalType":"address","name":"_priceFeedAddress","type":"address"},{"internalType":"address","name":"_communityIssuanceAddress","type":"address"}],"name":"setAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sortedTroves","outputs":[{"internalType":"contract ISortedTroves","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"troveManager","outputs":[{"internalType":"contract ITroveManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_upperHint","type":"address"},{"internalType":"address","name":"_lowerHint","type":"address"}],"name":"withdrawETHGainToTrove","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawFromSP","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}]')},bcab:function(e,t,n){"use strict";var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n),Object.defineProperty(e,a,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),i=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||a(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),t.UnsupportedNetworkError=t._connectByChainId=void 0;var s=n("4b5c");Object.defineProperty(t,"_connectByChainId",{enumerable:!0,get:function(){return s._connectByChainId}}),Object.defineProperty(t,"UnsupportedNetworkError",{enumerable:!0,get:function(){return s.UnsupportedNetworkError}}),i(n("978b"),t),i(n("88d5"),t),i(n("3f97"),t),i(n("faa6"),t),i(n("4285"),t),i(n("aacf"),t),i(n("931b"),t)},c45c:function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Fees=void 0;const i=a(n("f654")),s=n("cdef"),r=n("ea52");class o{constructor(e,t,n,a,r,o){this._baseRateWithoutDecay=s.Decimal.from(e),this._minuteDecayFactor=s.Decimal.from(t),this._beta=s.Decimal.from(n),this._lastFeeOperation=a,this._timeOfLatestBlock=r,this._recoveryMode=o,i.default(this._minuteDecayFactor.lt(1))}_setRecoveryMode(e){return new o(this._baseRateWithoutDecay,this._minuteDecayFactor,this._beta,this._lastFeeOperation,this._timeOfLatestBlock,e)}equals(e){return this._baseRateWithoutDecay.eq(e._baseRateWithoutDecay)&&this._minuteDecayFactor.eq(e._minuteDecayFactor)&&this._beta.eq(e._beta)&&this._lastFeeOperation.getTime()===e._lastFeeOperation.getTime()&&this._timeOfLatestBlock.getTime()===e._timeOfLatestBlock.getTime()&&this._recoveryMode===e._recoveryMode}toString(){return"{ baseRateWithoutDecay: "+this._baseRateWithoutDecay+`, lastFeeOperation: "${this._lastFeeOperation.toLocaleString()}"`+`, recoveryMode: ${this._recoveryMode} } `}baseRate(e=this._timeOfLatestBlock){const t=Math.max(e.getTime()-this._lastFeeOperation.getTime(),0),n=Math.floor(t/6e4);return this._minuteDecayFactor.pow(n).mul(this._baseRateWithoutDecay)}borrowingRate(e){return this._recoveryMode?s.Decimal.ZERO:s.Decimal.min(r.MINIMUM_BORROWING_RATE.add(this.baseRate(e)),r.MAXIMUM_BORROWING_RATE)}redemptionRate(e=s.Decimal.ZERO,t){e=s.Decimal.from(e);let n=this.baseRate(t);return e.nonZero&&(n=e.div(this._beta).add(n)),s.Decimal.min(r.MINIMUM_REDEMPTION_RATE.add(n),s.Decimal.ONE)}}t.Fees=o},cafa:function(e){e.exports=JSON.parse('[{"inputs":[{"internalType":"address","name":"_communityIssuanceAddress","type":"address"},{"internalType":"address","name":"_lqtyStakingAddress","type":"address"},{"internalType":"address","name":"_lockupFactoryAddress","type":"address"},{"internalType":"address","name":"_bountyAddress","type":"address"},{"internalType":"address","name":"_lpRewardsAddress","type":"address"},{"internalType":"address","name":"_multisigAddress","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_communityIssuanceAddress","type":"address"}],"name":"CommunityIssuanceAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lqtyStakingAddress","type":"address"}],"name":"LQTYStakingAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lockupContractFactoryAddress","type":"address"}],"name":"LockupContractFactoryAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"ONE_YEAR_IN_SECONDS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"communityIssuanceAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"domainSeparator","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getDeploymentStartTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLpRewardsEntitlement","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lockupContractFactory","outputs":[{"internalType":"contract ILockupContractFactory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lqtyStakingAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"multisigAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"permitTypeHash","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_sender","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"sendToLQTYStaking","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}]')},cd4a:function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_activePoolAddress","type":"address"}],"name":"ActivePoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_baseRate","type":"uint256"}],"name":"BaseRateUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newBorrowerOperationsAddress","type":"address"}],"name":"BorrowerOperationsAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_collSurplusPoolAddress","type":"address"}],"name":"CollSurplusPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_defaultPoolAddress","type":"address"}],"name":"DefaultPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_gasPoolAddress","type":"address"}],"name":"GasPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lqtyStakingAddress","type":"address"}],"name":"LQTYStakingAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lqtyTokenAddress","type":"address"}],"name":"LQTYTokenAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_L_ETH","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_L_LUSDDebt","type":"uint256"}],"name":"LTermsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newLUSDTokenAddress","type":"address"}],"name":"LUSDTokenAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_lastFeeOpTime","type":"uint256"}],"name":"LastFeeOpTimeUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_liquidatedDebt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_liquidatedColl","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_collGasCompensation","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_LUSDGasCompensation","type":"uint256"}],"name":"Liquidation","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_newPriceFeedAddress","type":"address"}],"name":"PriceFeedAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_attemptedLUSDAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_actualLUSDAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_ETHSent","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_ETHFee","type":"uint256"}],"name":"Redemption","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_sortedTrovesAddress","type":"address"}],"name":"SortedTrovesAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_stabilityPoolAddress","type":"address"}],"name":"StabilityPoolAddressChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_totalStakesSnapshot","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_totalCollateralSnapshot","type":"uint256"}],"name":"SystemSnapshotsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_newTotalStakes","type":"uint256"}],"name":"TotalStakesUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"_newIndex","type":"uint256"}],"name":"TroveIndexUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"_debt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_coll","type":"uint256"},{"indexed":false,"internalType":"enum TroveManager.TroveManagerOperation","name":"_operation","type":"uint8"}],"name":"TroveLiquidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_L_ETH","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_L_LUSDDebt","type":"uint256"}],"name":"TroveSnapshotsUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"_borrower","type":"address"},{"indexed":false,"internalType":"uint256","name":"_debt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_coll","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_stake","type":"uint256"},{"indexed":false,"internalType":"enum TroveManager.TroveManagerOperation","name":"_operation","type":"uint8"}],"name":"TroveUpdated","type":"event"},{"inputs":[],"name":"BETA","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BOOTSTRAP_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BORROWING_FEE_FLOOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"CCR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DECIMAL_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LUSD_GAS_COMPENSATION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"L_ETH","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"L_LUSDDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_BORROWING_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MCR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINUTE_DECAY_FACTOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_NET_DEBT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERCENT_DIVISOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"REDEMPTION_FEE_FLOOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SECONDS_IN_ONE_MINUTE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"TroveOwners","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"Troves","outputs":[{"internalType":"uint256","name":"debt","type":"uint256"},{"internalType":"uint256","name":"coll","type":"uint256"},{"internalType":"uint256","name":"stake","type":"uint256"},{"internalType":"enum TroveManager.Status","name":"status","type":"uint8"},{"internalType":"uint128","name":"arrayIndex","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"_100pct","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"activePool","outputs":[{"internalType":"contract IActivePool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"addTroveOwnerToArray","outputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"applyPendingRewards","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"baseRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"_troveArray","type":"address[]"}],"name":"batchLiquidateTroves","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"borrowerOperationsAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"checkRecoveryMode","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"closeTrove","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decayBaseRateFromBorrowing","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"},{"internalType":"uint256","name":"_collDecrease","type":"uint256"}],"name":"decreaseTroveColl","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"},{"internalType":"uint256","name":"_debtDecrease","type":"uint256"}],"name":"decreaseTroveDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"defaultPool","outputs":[{"internalType":"contract IDefaultPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_LUSDDebt","type":"uint256"}],"name":"getBorrowingFee","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_LUSDDebt","type":"uint256"}],"name":"getBorrowingFeeWithDecay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBorrowingRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBorrowingRateWithDecay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"},{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"getCurrentICR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"getEntireDebtAndColl","outputs":[{"internalType":"uint256","name":"debt","type":"uint256"},{"internalType":"uint256","name":"coll","type":"uint256"},{"internalType":"uint256","name":"pendingLUSDDebtReward","type":"uint256"},{"internalType":"uint256","name":"pendingETHReward","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEntireSystemColl","outputs":[{"internalType":"uint256","name":"entireSystemColl","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getEntireSystemDebt","outputs":[{"internalType":"uint256","name":"entireSystemDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"getNominalICR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"getPendingETHReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"getPendingLUSDDebtReward","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_ETHDrawn","type":"uint256"}],"name":"getRedemptionFeeWithDecay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRedemptionRate","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getRedemptionRateWithDecay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_price","type":"uint256"}],"name":"getTCR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"getTroveColl","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"getTroveDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"}],"name":"getTroveFromTroveOwnersArray","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getTroveOwnersCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"getTroveStake","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"getTroveStatus","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"hasPendingRewards","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"},{"internalType":"uint256","name":"_collIncrease","type":"uint256"}],"name":"increaseTroveColl","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"},{"internalType":"uint256","name":"_debtIncrease","type":"uint256"}],"name":"increaseTroveDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastETHError_Redistribution","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastFeeOperationTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastLUSDDebtError_Redistribution","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_n","type":"uint256"}],"name":"liquidateTroves","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lqtyStaking","outputs":[{"internalType":"contract ILQTYStaking","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lqtyToken","outputs":[{"internalType":"contract ILQTYToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lusdToken","outputs":[{"internalType":"contract ILUSDToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"contract IPriceFeed","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_LUSDamount","type":"uint256"},{"internalType":"address","name":"_firstRedemptionHint","type":"address"},{"internalType":"address","name":"_upperPartialRedemptionHint","type":"address"},{"internalType":"address","name":"_lowerPartialRedemptionHint","type":"address"},{"internalType":"uint256","name":"_partialRedemptionHintNICR","type":"uint256"},{"internalType":"uint256","name":"_maxIterations","type":"uint256"},{"internalType":"uint256","name":"_maxFeePercentage","type":"uint256"}],"name":"redeemCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"removeStake","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"rewardSnapshots","outputs":[{"internalType":"uint256","name":"ETH","type":"uint256"},{"internalType":"uint256","name":"LUSDDebt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrowerOperationsAddress","type":"address"},{"internalType":"address","name":"_activePoolAddress","type":"address"},{"internalType":"address","name":"_defaultPoolAddress","type":"address"},{"internalType":"address","name":"_stabilityPoolAddress","type":"address"},{"internalType":"address","name":"_gasPoolAddress","type":"address"},{"internalType":"address","name":"_collSurplusPoolAddress","type":"address"},{"internalType":"address","name":"_priceFeedAddress","type":"address"},{"internalType":"address","name":"_lusdTokenAddress","type":"address"},{"internalType":"address","name":"_sortedTrovesAddress","type":"address"},{"internalType":"address","name":"_lqtyTokenAddress","type":"address"},{"internalType":"address","name":"_lqtyStakingAddress","type":"address"}],"name":"setAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"},{"internalType":"uint256","name":"_num","type":"uint256"}],"name":"setTroveStatus","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"sortedTroves","outputs":[{"internalType":"contract ISortedTroves","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stabilityPool","outputs":[{"internalType":"contract IStabilityPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalCollateralSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStakes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalStakesSnapshot","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"updateStakeAndTotalStakes","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_borrower","type":"address"}],"name":"updateTroveRewardSnapshots","outputs":[],"stateMutability":"nonpayable","type":"function"}]')},cdef:function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.Percent=t.Difference=t.Decimal=void 0;const i=a(n("f654")),s=n("8fa9"),r=e=>l.pow(e),o="0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",u=18,d=s.BigNumber.from(1),l=s.BigNumber.from(10),p=r(u),y=/^[0-9]*(\.[0-9]*)?(e[-+]?[0-9]+)?$/,c=/0*$/,m=["","K","M","B","T"],T=(e,t)=>e.mul(t).add(b.HALF.hex).div(p);class b{constructor(e){if(e.isNegative())throw new Error("negatives not supported by Decimal");this._bigNumber=e}get hex(){return this._bigNumber.toHexString()}get bigNumber(){return this._bigNumber.toString()}static fromBigNumberString(e){return new b(s.BigNumber.from(e))}static _fromString(e){if(!e||!e.match(y))throw new Error(`bad decimal format: "${e}"`);if(e.includes("e")){let[t,n]=e.split("e");return n.startsWith("-")?new b(b._fromString(t)._bigNumber.div(l.pow(s.BigNumber.from(n.substr(1))))):(n.startsWith("+")&&(n=n.substr(1)),new b(b._fromString(t)._bigNumber.mul(l.pow(s.BigNumber.from(n)))))}if(!e.includes("."))return new b(s.BigNumber.from(e).mul(p));let[t,n]=e.split(".");return n.length<u?n+="0".repeat(u-n.length):n=n.substr(0,u),new b(s.BigNumber.from(t||0).mul(p).add(n))}static from(e){switch(typeof e){case"object":if(e instanceof b)return e;throw new Error("invalid Decimalish value");case"string":return b._fromString(e);case"number":return b._fromString(e.toString());default:throw new Error("invalid Decimalish value")}}_toStringWithAutomaticPrecision(){const e=this._bigNumber.div(p),t=this._bigNumber.mod(p);if(t.isZero())return e.toString();{const n=t.toString().padStart(u,"0"),a=n.replace(c,"");return e.toString()+"."+a}}_roundUp(e){const t=r(u-1-e).mul(5);return this._bigNumber.add(t)}_toStringWithPrecision(e){if(e<0)throw new Error("precision must not be negative");const t=e<u?this._roundUp(e):this._bigNumber,n=t.div(p),a=t.mod(p);if(0===e)return n.toString();{const t=a.toString().padStart(u,"0"),i=t.substr(0,e);return n.toString()+"."+i}}toString(e){return this.infinite?"∞":void 0!==e?this._toStringWithPrecision(e):this._toStringWithAutomaticPrecision()}prettify(e=2){const[t,n]=this.toString(e).split("."),a=t.replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1,");return void 0!==n?a+"."+n:a}shorten(){const e=this.toString(0).length,t=Math.min(Math.floor((e-1)/3),m.length-1),n=Math.max(3*(t+1)-e,0),a=this.div(new b(r(u+3*t)));return a.prettify(n)+m[t]}add(e){return new b(this._bigNumber.add(b.from(e)._bigNumber))}sub(e){return new b(this._bigNumber.sub(b.from(e)._bigNumber))}mul(e){return new b(this._bigNumber.mul(b.from(e)._bigNumber).div(p))}div(e){return e=b.from(e),e.isZero?b.INFINITY:new b(this._bigNumber.mul(p).div(e._bigNumber))}_divCeil(e){return e=b.from(e),e.isZero?b.INFINITY:new b(this._bigNumber.mul(p).add(e._bigNumber.sub(d)).div(e._bigNumber))}mulDiv(e,t){return e=b.from(e),t=b.from(t),t.isZero?b.INFINITY:new b(this._bigNumber.mul(e._bigNumber).div(t._bigNumber))}pow(e){if(i.default(Number.isInteger(e)),i.default(0<=e&&e<=4294967295),0===e)return b.ONE;if(1===e)return this;let t=this._bigNumber,n=p;for(;e>1;e>>>=1)1&e&&(n=T(t,n)),t=T(t,t);return new b(T(t,n))}get isZero(){return this._bigNumber.isZero()}get zero(){if(this.isZero)return this}get nonZero(){if(!this.isZero)return this}get infinite(){if(this.eq(b.INFINITY))return this}get finite(){if(!this.eq(b.INFINITY))return this}get absoluteValue(){return this}lt(e){return this._bigNumber.lt(b.from(e)._bigNumber)}eq(e){return this._bigNumber.eq(b.from(e)._bigNumber)}gt(e){return this._bigNumber.gt(b.from(e)._bigNumber)}gte(e){return this._bigNumber.gte(b.from(e)._bigNumber)}lte(e){return this._bigNumber.lte(b.from(e)._bigNumber)}static min(e,t){return e=b.from(e),t=b.from(t),e.lt(t)?e:t}static max(e,t){return e=b.from(e),t=b.from(t),e.gt(t)?e:t}}t.Decimal=b,b.INFINITY=b.fromBigNumberString(o),b.ZERO=b.from(0),b.HALF=b.from(.5),b.ONE=b.from(1);class f{constructor(e){this._number=e}static between(e,t){return void 0===e||void 0===t?new f(void 0):(e=b.from(e),t=b.from(t),e.infinite&&t.infinite?new f(void 0):e.infinite?new f({sign:"+",absoluteValue:e}):t.infinite?new f({sign:"-",absoluteValue:t}):e.gt(t)?new f({sign:"+",absoluteValue:b.from(e).sub(t)}):t.gt(e)?new f({sign:"-",absoluteValue:b.from(t).sub(e)}):new f({sign:"",absoluteValue:b.ZERO}))}toString(e){return this._number?this._number.sign+this._number.absoluteValue.toString(e):"N/A"}prettify(e){return this._number?this._number.sign+this._number.absoluteValue.prettify(e):this.toString()}mul(e){return new f(this._number&&{sign:this._number.sign,absoluteValue:this._number.absoluteValue.mul(e)})}get nonZero(){var e;return(null===(e=this._number)||void 0===e?void 0:e.absoluteValue.nonZero)&&this}get positive(){var e;return"+"===(null===(e=this._number)||void 0===e?void 0:e.sign)?this:void 0}get negative(){var e;return"-"===(null===(e=this._number)||void 0===e?void 0:e.sign)?this:void 0}get absoluteValue(){var e;return null===(e=this._number)||void 0===e?void 0:e.absoluteValue}get infinite(){var e;return(null===(e=this._number)||void 0===e?void 0:e.absoluteValue.infinite)&&this}get finite(){var e;return(null===(e=this._number)||void 0===e?void 0:e.absoluteValue.finite)&&this}}t.Difference=f;class h{constructor(e){this._percent=e.infinite||e.mul&&e.mul(100)||e}nonZeroish(e){var t;const n=`0.${"0".repeat(e)}5`;if(null===(t=this._percent.absoluteValue)||void 0===t?void 0:t.gte(n))return this}toString(e){return this._percent.toString(e)+(this._percent.absoluteValue&&!this._percent.infinite?"%":"")}prettify(){var e,t;return(null===(e=this._percent.absoluteValue)||void 0===e?void 0:e.gte("1000"))?this.toString(0):(null===(t=this._percent.absoluteValue)||void 0===t?void 0:t.gte("10"))?this.toString(1):this.toString(2)}}t.Percent=h},d2f7:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TransactionFailedError=void 0;class a extends Error{constructor(e,t,n){super(t),this.name=e,this.failedReceipt=n}}t.TransactionFailedError=a},ddc8:function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.LiquityStore=void 0;const i=a(n("f654")),s=(e,t)=>e===t,r=(e,t)=>e.eq(t),o=(e,t)=>e.equals(t),u=(e,t)=>"unregistered"===e.status?"unregistered"===t.status:"registered"===t.status&&e.kickbackRate.eq(t.kickbackRate),d=e=>"unregistered"===e.status?'{ status: "unregistered" }':`{ status: "registered", kickbackRate: ${e.kickbackRate} }`,l=e=>(...t)=>e(...t),p=(e,t)=>Object.fromEntries(Object.entries(e).filter(([e,n])=>n!==t[e]));class y{constructor(){this.logging=!1,this._loaded=!1,this._listeners=new Set}get state(){return Object.assign({},this._baseState,this._derivedState,this._extraState)}start(){const e=this._doStart();return()=>{e(),this._cancelUpdateIfScheduled()}}_cancelUpdateIfScheduled(){void 0!==this._updateTimeoutId&&clearTimeout(this._updateTimeoutId)}_scheduleUpdate(){this._cancelUpdateIfScheduled(),this._updateTimeoutId=setTimeout(()=>{this._updateTimeoutId=void 0,this._update()},3e4)}_logUpdate(e,t,n){return this.logging,t}_updateIfChanged(e,t,n,a,i){return void 0===a||e(n,a)?n:this._logUpdate(t,a,i)}_silentlyUpdateIfChanged(e,t,n){return void 0===n||e(t,n)?t:n}_updateFees(e,t,n){return n&&!n.equals(t)?(""+n!==""+t&&this._logUpdate(e,n),n):t}_reduce(e,t){return{frontend:this._updateIfChanged(u,"frontend",e.frontend,t.frontend,d),ownFrontend:this._updateIfChanged(u,"ownFrontend",e.ownFrontend,t.ownFrontend,d),numberOfTroves:this._updateIfChanged(s,"numberOfTroves",e.numberOfTroves,t.numberOfTroves),accountBalance:this._updateIfChanged(r,"accountBalance",e.accountBalance,t.accountBalance),lusdBalance:this._updateIfChanged(r,"lusdBalance",e.lusdBalance,t.lusdBalance),lqtyBalance:this._updateIfChanged(r,"lqtyBalance",e.lqtyBalance,t.lqtyBalance),uniTokenBalance:this._updateIfChanged(r,"uniTokenBalance",e.uniTokenBalance,t.uniTokenBalance),uniTokenAllowance:this._updateIfChanged(r,"uniTokenAllowance",e.uniTokenAllowance,t.uniTokenAllowance),remainingLiquidityMiningLQTYReward:this._silentlyUpdateIfChanged(r,e.remainingLiquidityMiningLQTYReward,t.remainingLiquidityMiningLQTYReward),liquidityMiningStake:this._updateIfChanged(r,"liquidityMiningStake",e.liquidityMiningStake,t.liquidityMiningStake),totalStakedUniTokens:this._updateIfChanged(r,"totalStakedUniTokens",e.totalStakedUniTokens,t.totalStakedUniTokens),liquidityMiningLQTYReward:this._silentlyUpdateIfChanged(r,e.liquidityMiningLQTYReward,t.liquidityMiningLQTYReward),collateralSurplusBalance:this._updateIfChanged(r,"collateralSurplusBalance",e.collateralSurplusBalance,t.collateralSurplusBalance),price:this._updateIfChanged(r,"price",e.price,t.price),lusdInStabilityPool:this._updateIfChanged(r,"lusdInStabilityPool",e.lusdInStabilityPool,t.lusdInStabilityPool),total:this._updateIfChanged(o,"total",e.total,t.total),totalRedistributed:this._updateIfChanged(o,"totalRedistributed",e.totalRedistributed,t.totalRedistributed),troveBeforeRedistribution:this._updateIfChanged(o,"troveBeforeRedistribution",e.troveBeforeRedistribution,t.troveBeforeRedistribution),stabilityDeposit:this._updateIfChanged(o,"stabilityDeposit",e.stabilityDeposit,t.stabilityDeposit),remainingStabilityPoolLQTYReward:this._silentlyUpdateIfChanged(r,e.remainingStabilityPoolLQTYReward,t.remainingStabilityPoolLQTYReward),_feesInNormalMode:this._silentlyUpdateIfChanged(o,e._feesInNormalMode,t._feesInNormalMode),lqtyStake:this._updateIfChanged(o,"lqtyStake",e.lqtyStake,t.lqtyStake),totalStakedLQTY:this._updateIfChanged(r,"totalStakedLQTY",e.totalStakedLQTY,t.totalStakedLQTY),_riskiestTroveBeforeRedistribution:this._silentlyUpdateIfChanged(o,e._riskiestTroveBeforeRedistribution,t._riskiestTroveBeforeRedistribution)}}_derive({troveBeforeRedistribution:e,totalRedistributed:t,_feesInNormalMode:n,total:a,price:i,_riskiestTroveBeforeRedistribution:s}){const r=n._setRecoveryMode(a.collateralRatioIsBelowCritical(i));return{trove:e.applyRedistribution(t),fees:r,borrowingRate:r.borrowingRate(),redemptionRate:r.redemptionRate(),haveUndercollateralizedTroves:s.applyRedistribution(t).collateralRatioIsBelowMinimum(i)}}_reduceDerived(e,t){return{fees:this._updateFees("fees",e.fees,t.fees),trove:this._updateIfChanged(o,"trove",e.trove,t.trove),borrowingRate:this._silentlyUpdateIfChanged(r,e.borrowingRate,t.borrowingRate),redemptionRate:this._silentlyUpdateIfChanged(r,e.redemptionRate,t.redemptionRate),haveUndercollateralizedTroves:this._updateIfChanged(s,"haveUndercollateralizedTroves",e.haveUndercollateralizedTroves,t.haveUndercollateralizedTroves)}}_notify(e){[...this._listeners].forEach(t=>{this._listeners.has(t)&&t(e)})}subscribe(e){const t=l(e);return this._listeners.add(t),()=>{this._listeners.delete(t)}}_load(e,t){i.default(!this._loaded),this._baseState=e,this._derivedState=this._derive(e),this._extraState=t,this._loaded=!0,this._scheduleUpdate(),this.onLoaded&&this.onLoaded()}_update(e,t){i.default(this._baseState&&this._derivedState);const n=this.state;e&&(this._baseState=this._reduce(this._baseState,e)),this._derivedState=this._reduceDerived(this._derivedState,this._derive(this._baseState)),t&&(i.default(this._extraState),this._extraState=this._reduceExtra(this._extraState,t)),this._scheduleUpdate(),this._notify({newState:this.state,oldState:n,stateChange:p(this.state,n)})}}t.LiquityStore=y},e063:function(e){e.exports=JSON.parse('[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_lastGoodPrice","type":"uint256"}],"name":"LastGoodPriceUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"enum PriceFeed.Status","name":"newStatus","type":"uint8"}],"name":"PriceFeedStatusChanged","type":"event"},{"inputs":[],"name":"DECIMAL_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ETHUSD_TELLOR_REQ_ID","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PRICE_DEVIATION_FROM_PREVIOUS_ROUND","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_PRICE_DIFFERENCE_BETWEEN_ORACLES","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TARGET_DIGITS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TELLOR_DIGITS","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TIMEOUT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fetchPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"lastGoodPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceAggregator","outputs":[{"internalType":"contract AggregatorV3Interface","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_priceAggregatorAddress","type":"address"},{"internalType":"address","name":"_tellorCallerAddress","type":"address"}],"name":"setAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"status","outputs":[{"internalType":"enum PriceFeed.Status","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tellorCaller","outputs":[{"internalType":"contract ITellorCaller","name":"","type":"address"}],"stateMutability":"view","type":"function"}]')},e25f:function(e){e.exports=JSON.parse("null")},e753:function(e){e.exports=JSON.parse('{"chainId":56,"version":"1ff561376b6d24ea979d7a63ad40557c4aa825de","deploymentDate":1619615804000,"bootstrapPeriod":1209600,"totalStabilityPoolLQTYReward":"32000000","liquidityMiningLQTYRewardRate":"0.367430922986478542","_priceFeedIsTestnet":false,"_uniTokenIsMock":false,"_isDev":false,"addresses":{"activePool":"0xCC850A389Ca680b978f197761091E12857bBccE2","borrowerOperations":"0x910CC635DEeEE355c6C862782226D584932a6AfE","troveManager":"0x6FAE359Ed9e6a4eBA8943010F001Cd4B0c6547ec","collSurplusPool":"0x5D764D4fA6Fa76eAB04a5b8CE8b3bb71E5AB2585","communityIssuance":"0x232AB55e6D7957351D8d211dc32baF3F3B02E771","defaultPool":"0xEA7c34299928F26b029303014686DfF8C800DA24","hintHelpers":"0x02FeDcDdD3c3D3e5061507ca5a7F1C30f982bd26","lockupContractFactory":"0x84f68c951F326e96056553242AF9059484C0F400","lqtyStaking":"0x701f1B2215DD073d2107Bd94c64C9373BcE5F715","priceFeed":"0xD37665F49bb19e32FBb3A90c80cbd6d2179CF4C5","sortedTroves":"0xE953661Ac1F4f8980eD83f2cD0184E5d30D6c952","stabilityPool":"0xc21fe311b283E69779924B0EE2a9B5020C26b41E","gasPool":"0xE45e34E546759b43e2Cd62410bFd63BC02b612de","unipool":"0x174841c81974ab1FAEb6Ae59fba6B2810bAd2ce4","lusdToken":"0xCa78eaaE9378288B8bc281e29d0c3202781b44be","lqtyToken":"0xADd7fcF3fB309E68Eab7559FcC8879D02E9b5ff5","multiTroveGetter":"0x598D18F58386c8c935540F0A0eb98CAA64234781","uniToken":"0xfa5b9853e835E955f33D2311d0dE1FA6Ec766564"}}')},ea52:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MINIMUM_REDEMPTION_RATE=t.MAXIMUM_BORROWING_RATE=t.MINIMUM_BORROWING_RATE=t.LUSD_MINIMUM_DEBT=t.LUSD_MINIMUM_NET_DEBT=t.LUSD_LIQUIDATION_RESERVE=t.MINIMUM_COLLATERAL_RATIO=t.CRITICAL_COLLATERAL_RATIO=void 0;const a=n("cdef");t.CRITICAL_COLLATERAL_RATIO=a.Decimal.from(1.5),t.MINIMUM_COLLATERAL_RATIO=a.Decimal.from(1.1),t.LUSD_LIQUIDATION_RESERVE=a.Decimal.from(200),t.LUSD_MINIMUM_NET_DEBT=a.Decimal.from(1800),t.LUSD_MINIMUM_DEBT=t.LUSD_LIQUIDATION_RESERVE.add(t.LUSD_MINIMUM_NET_DEBT),t.MINIMUM_BORROWING_RATE=a.Decimal.from(.005),t.MAXIMUM_BORROWING_RATE=a.Decimal.from(.05),t.MINIMUM_REDEMPTION_RATE=a.Decimal.from(.005)},f0b4:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.logsToString=void 0;const a=n("3a17"),i=n("b46b"),s=n("b565"),r=e=>Object.fromEntries(Object.entries(e).map(([,e])=>[e.address,e.interface])),o=e=>Object.fromEntries(Object.entries(e).map(([e,t])=>[t.address,e])),u=(e,t)=>{const{address:n}=e;if(n in t)try{return{address:n,logDescription:t[n].parseLog(e)}}catch(a){}},d=(e,t)=>{const n=[],a=[];return e.forEach(e=>{const i=u(e,t);i?n.push(i):a.push(e)}),[n,a]},l=a.BigNumber.from(10).pow(9),p=(e,t)=>a.BigNumber.isBigNumber(e)?e.gte(l)?s.Decimal.fromBigNumberString(e.toHexString())+"e18":e.toString():"string"===typeof e?e===i.AddressZero?"address(0)":t&&e in t?t[e]:e:String(e),y=(e,t)=>{const n=Object.entries(e.args).filter(([e])=>!e.match(/^[0-9]/)).map(([e,n])=>`${e}: ${p(n,t)}`);return`${e.name}({ ${n.join(", ")} })`},c=(e,t)=>{const n=t,a=r(n),i=o(n),s={[e.from]:"user",...i},[u,l]=d(e.logs,a);return l.length,u.length>0?`Logs of tx ${e.transactionHash}:\n`+u.map(({address:e,logDescription:t})=>`  ${i[e]}.${y(t,s)}`).join("\n"):"No logs were parsed in tx "+e.transactionHash};t.logsToString=c},f43f:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t._successfulReceipt=t._failedReceipt=t._pendingReceipt=void 0,t._pendingReceipt={status:"pending"};const a=e=>({status:"failed",rawReceipt:e});t._failedReceipt=a;const i=(e,t,n)=>({status:"succeeded",rawReceipt:e,details:t,...n?{toString:n}:{}});t._successfulReceipt=i},f5c4:function(e){e.exports=JSON.parse('{"chainId":3,"version":"5174ecd0da4842157aba989499200d690b7e374f","deploymentDate":1617356113000,"bootstrapPeriod":1209600,"totalStabilityPoolLQTYReward":"32000000","liquidityMiningLQTYRewardRate":"0.257201646090534979","_priceFeedIsTestnet":true,"_uniTokenIsMock":false,"_isDev":false,"addresses":{"activePool":"0x8bE79B54Bff7754B57294077c2B5017AF9f57dC2","borrowerOperations":"0xfe9049E677C5773dd72ac7E19c38c68aB0891744","troveManager":"0xcd89b25a565Ad0895c551DAe040c2b5F9Eb11D64","collSurplusPool":"0x7426EFda9B17992B3F7cE3680D5D128E1F876C05","communityIssuance":"0x94f0835Aa7cEe67fF122419BeE52b82Abe637a16","defaultPool":"0x6412c93AB383B87Af7c5E673fb3a295c8977A3Ed","hintHelpers":"0x82869137C51e0DC1Bf3aeE5bc1f0B73EADfEBB25","lockupContractFactory":"0x65188ae9dDE4A59b73796Eb26AE33a3D5fe9b84d","lqtyStaking":"0x63a7c03b921f5A59D9f583A34585bC6eFc832b59","priceFeed":"0x7151f3828948B8824C677DA8daf7BD13014c1187","sortedTroves":"0xA401f217DB7d84432C98272F637E9d450c6D16f2","stabilityPool":"0x02dD2a33d0bBF40343CD09941F275978b1cd4ab9","gasPool":"0x8c2706b7bF86576F16Db7C099F5a62E7Ce8F0661","unipool":"0x8C2C33247A691a98d05B60c2D7448687b6C56a86","lusdToken":"0x99Fda92878c1d2f1e0971D1937C50CC578A33E3D","lqtyToken":"0x25fE5Ed43aD2370f31414AC9De11E028A699a40e","multiTroveGetter":"0xDA7Aa96fC750B456a63af90D894063009e26f6ba","uniToken":"0x14E87Db22A5a402a0A1461FAE94fade1976AAaF7"}}')},f659:function(e,t,n){"use strict";var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.TroveWithPendingRedistribution=t.UserTrove=t._emptyTrove=t.Trove=t._normalizeTroveAdjustment=t._normalizeTroveCreation=void 0;const i=a(n("f654")),s=n("cdef"),r=n("ea52"),o=(e,t)=>({type:"invalidCreation",invalidTrove:e,error:t}),u=e=>({type:"creation",params:e}),d=e=>({type:"closure",params:e}),l=(e,t)=>({type:"adjustment",params:e,setToZero:t}),p=e=>void 0!==e[1],y=["depositCollateral","borrowLUSD"];function c(e){const t=e.filter(([e])=>!y.includes(e)).map(([e])=>`'${e}'`);if(t.length>0)throw new Error(`TroveCreationParams: property ${t.join(", ")} not allowed`)}const m=e=>{const t=Object.fromEntries(e),n=y.filter(e=>!(e in t)).map(e=>`'${e}'`);if(n.length>0)throw new Error(`TroveCreationParams: property ${n.join(", ")} missing`);return t},T=([e,t])=>[e,s.Decimal.from(t)],b=([,e])=>!e.isZero,f=e=>{const t=Object.entries(e).filter(p);c(t);const n=t.map(T);return m(n)};t._normalizeTroveCreation=f;const h=["depositCollateral","withdrawCollateral","borrowLUSD","repayLUSD"];function _(e){const t=e.filter(([e])=>!h.includes(e)).map(([e])=>`'${e}'`);if(t.length>0)throw new Error(`TroveAdjustmentParams: property ${t.join(", ")} not allowed`)}const v=({depositCollateral:e,withdrawCollateral:t})=>{if(void 0!==e&&void 0!==t)throw new Error("TroveAdjustmentParams: 'depositCollateral' and 'withdrawCollateral' can't be present at the same time");return void 0!==e?{depositCollateral:e}:void 0!==t?{withdrawCollateral:t}:void 0},g=({borrowLUSD:e,repayLUSD:t})=>{if(void 0!==e&&void 0!==t)throw new Error("TroveAdjustmentParams: 'borrowLUSD' and 'repayLUSD' can't be present at the same time");return void 0!==e?{borrowLUSD:e}:void 0!==t?{repayLUSD:t}:void 0},w=e=>{const t=Object.fromEntries(e),n=v(t),a=g(t);if(void 0!==n&&void 0!==a)return{...n,...a};if(void 0!==n)return n;if(void 0!==a)return a;throw new Error("TroveAdjustmentParams: must include at least one non-zero parameter")},S=e=>{const t=Object.entries(e).filter(p);_(t);const n=t.map(T).filter(b);return w(n)};t._normalizeTroveAdjustment=S;const M=(e,t)=>t.mul(s.Decimal.ONE.add(e)),D=(e,t)=>t._divCeil(s.Decimal.ONE.add(e)),A=s.Decimal.from(100);class E{constructor(e=s.Decimal.ZERO,t=s.Decimal.ZERO){this.collateral=e,this.debt=t}get isEmpty(){return this.collateral.isZero&&this.debt.isZero}get netDebt(){if(this.debt.lt(r.LUSD_LIQUIDATION_RESERVE))throw new Error("netDebt should not be used when debt < "+r.LUSD_LIQUIDATION_RESERVE);return this.debt.sub(r.LUSD_LIQUIDATION_RESERVE)}get _nominalCollateralRatio(){return this.collateral.mulDiv(A,this.debt)}collateralRatio(e){return this.collateral.mulDiv(e,this.debt)}collateralRatioIsBelowMinimum(e){return this.collateralRatio(e).lt(r.MINIMUM_COLLATERAL_RATIO)}collateralRatioIsBelowCritical(e){return this.collateralRatio(e).lt(r.CRITICAL_COLLATERAL_RATIO)}isOpenableInRecoveryMode(e){return this.collateralRatio(e).gte(r.CRITICAL_COLLATERAL_RATIO)}toString(){return`{ collateral: ${this.collateral}, debt: ${this.debt} }`}equals(e){return this.collateral.eq(e.collateral)&&this.debt.eq(e.debt)}add(e){return new E(this.collateral.add(e.collateral),this.debt.add(e.debt))}addCollateral(e){return new E(this.collateral.add(e),this.debt)}addDebt(e){return new E(this.collateral,this.debt.add(e))}subtract(e){const{collateral:t,debt:n}=e;return new E(this.collateral.gt(t)?this.collateral.sub(t):s.Decimal.ZERO,this.debt.gt(n)?this.debt.sub(n):s.Decimal.ZERO)}subtractCollateral(e){return new E(this.collateral.gt(e)?this.collateral.sub(e):s.Decimal.ZERO,this.debt)}subtractDebt(e){return new E(this.collateral,this.debt.gt(e)?this.debt.sub(e):s.Decimal.ZERO)}multiply(e){return new E(this.collateral.mul(e),this.debt.mul(e))}setCollateral(e){return new E(s.Decimal.from(e),this.debt)}setDebt(e){return new E(this.collateral,s.Decimal.from(e))}_debtChange({debt:e},t){return e.gt(this.debt)?{borrowLUSD:D(t,e.sub(this.debt))}:{repayLUSD:this.debt.sub(e)}}_collateralChange({collateral:e}){return e.gt(this.collateral)?{depositCollateral:e.sub(this.collateral)}:{withdrawCollateral:this.collateral.sub(e)}}whatChanged(e,t=r.MINIMUM_BORROWING_RATE){var n;if(!this.collateral.eq(e.collateral)||!this.debt.eq(e.debt))return this.isEmpty?e.debt.lt(r.LUSD_LIQUIDATION_RESERVE)?o(e,"missingLiquidationReserve"):u({depositCollateral:e.collateral,borrowLUSD:D(t,e.netDebt)}):e.isEmpty?d(this.netDebt.nonZero?{withdrawCollateral:this.collateral,repayLUSD:this.netDebt}:{withdrawCollateral:this.collateral}):this.collateral.eq(e.collateral)?l(this._debtChange(e,t),e.debt.zero&&"debt"):this.debt.eq(e.debt)?l(this._collateralChange(e),e.collateral.zero&&"collateral"):l({...this._debtChange(e,t),...this._collateralChange(e)},null!==(n=e.debt.zero&&"debt")&&void 0!==n?n:e.collateral.zero&&"collateral")}apply(e,n=r.MINIMUM_BORROWING_RATE){if(!e)return this;switch(e.type){case"invalidCreation":if(!this.isEmpty)throw new Error("Can't create onto existing Trove");return e.invalidTrove;case"creation":{if(!this.isEmpty)throw new Error("Can't create onto existing Trove");const{depositCollateral:t,borrowLUSD:a}=e.params;return new E(t,r.LUSD_LIQUIDATION_RESERVE.add(M(n,a)))}case"closure":if(this.isEmpty)throw new Error("Can't close empty Trove");return t._emptyTrove;case"adjustment":{const{setToZero:t,params:{depositCollateral:a,withdrawCollateral:i,borrowLUSD:r,repayLUSD:o}}=e,u=null!==i&&void 0!==i?i:s.Decimal.ZERO,d=null!==a&&void 0!==a?a:s.Decimal.ZERO,l=null!==o&&void 0!==o?o:s.Decimal.ZERO,p=r?M(n,r):s.Decimal.ZERO;return"collateral"===t?this.setCollateral(s.Decimal.ZERO).addDebt(p).subtractDebt(l):"debt"===t?this.setDebt(s.Decimal.ZERO).addCollateral(d).subtractCollateral(u):this.add(new E(d,p)).subtract(new E(u,l))}}}static create(e,n){return t._emptyTrove.apply(u(t._normalizeTroveCreation(e)),n)}static recreate(e,n){const a=t._emptyTrove.whatChanged(e,n);return i.default("creation"===(null===a||void 0===a?void 0:a.type)),a.params}adjust(e,n){return this.apply(l(t._normalizeTroveAdjustment(e)),n)}adjustTo(e,t){const n=this.whatChanged(e,t);return i.default("adjustment"===(null===n||void 0===n?void 0:n.type)),n.params}}t.Trove=E,t._emptyTrove=new E;class L extends E{constructor(e,t,n,a){super(n,a),this.ownerAddress=e,this.status=t}equals(e){return super.equals(e)&&this.ownerAddress===e.ownerAddress&&this.status===e.status}toString(){return`{ ownerAddress: "${this.ownerAddress}", collateral: `+this.collateral+", debt: "+this.debt+`, status: "${this.status}" }`}}t.UserTrove=L;class x extends L{constructor(e,n,a,i,r=s.Decimal.ZERO,o=t._emptyTrove){super(e,n,a,i),this.stake=r,this.snapshotOfTotalRedistributed=o}applyRedistribution(e){const t=this.add(e.subtract(this.snapshotOfTotalRedistributed).multiply(this.stake));return new L(this.ownerAddress,this.status,t.collateral,t.debt)}equals(e){return super.equals(e)&&this.stake.eq(e.stake)&&this.snapshotOfTotalRedistributed.equals(e.snapshotOfTotalRedistributed)}}t.TroveWithPendingRedistribution=x},f6b6:function(e){e.exports=JSON.parse('[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_lqtyTokenAddress","type":"address"}],"name":"LQTYTokenAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"_stabilityPoolAddress","type":"address"}],"name":"StabilityPoolAddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_totalLQTYIssued","type":"uint256"}],"name":"TotalLQTYIssuedUpdated","type":"event"},{"inputs":[],"name":"DECIMAL_PRECISION","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"ISSUANCE_FACTOR","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"LQTYSupplyCap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"NAME","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SECONDS_IN_ONE_MINUTE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deploymentTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"isOwner","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"issueLQTY","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lqtyToken","outputs":[{"internalType":"contract ILQTYToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_account","type":"address"},{"internalType":"uint256","name":"_LQTYamount","type":"uint256"}],"name":"sendLQTY","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_lqtyTokenAddress","type":"address"},{"internalType":"address","name":"_stabilityPoolAddress","type":"address"}],"name":"setAddresses","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"stabilityPoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalLQTYIssued","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"}]')},f796:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t._connectToMulticall=void 0;const a=n("f179"),i=[{constant:!0,inputs:[],name:"getCurrentBlockTimestamp",outputs:[{name:"timestamp",type:"uint256"}],payable:!1,stateMutability:"view",type:"function"}],s={1:"0xeefba1e63905ef1d7acba5a8513c70307c1ce441",3:"0x53c43764255c17bd724f74c4ef150724ac50a3ed",4:"0x42ad527de7d4e9d9d011ac45b31d8551f8fe9821",5:"0x77dca2c955b15e9de4dbbcf1246b4b85b651e50e",42:"0x2cc8688c5f75e365aaeeb4ea8d6a480405a48d2a",56:"0x1Ee38d535d541c55C9dae27B12edf090C608E6Fb",97:"0xEB5d94D88557f979D1600720215D3d96A39Ffe38"},r=e=>e in s,o=(e,t)=>r(t)?new a.Contract(s[t],i,e):void 0;t._connectToMulticall=o},faa6:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BlockPolledLiquityStore=void 0;const a=n("b46b"),i=n("b565"),s=n("4b5c"),r=e=>{const t=Object.keys(e);return Promise.all(Object.values(e)).then(e=>Object.fromEntries(e.map((e,n)=>[t[n],e])))},o=e=>i.Decimal.fromBigNumberString(e.toHexString());class u extends i.LiquityStore{constructor(e){super(),this.connection=e.connection,this._readable=e,this._provider=s._getProvider(e.connection)}async _getRiskiestTroveBeforeRedistribution(e){const t=await this._readable.getTroves({first:1,sortedBy:"ascendingCollateralRatio",beforeRedistribution:!0},e);return 0===t.length?new i.TroveWithPendingRedistribution(a.AddressZero,"nonExistent"):t[0]}async _get(e){const{userAddress:t,frontendTag:n}=this.connection,{blockTimestamp:u,createFees:d,calculateRemainingLQTY:l,...p}=await r({blockTimestamp:s._getBlockTimestamp(this.connection,e),createFees:this._readable._getFeesFactory({blockTag:e}),calculateRemainingLQTY:this._readable._getRemainingLiquidityMiningLQTYRewardCalculator({blockTag:e}),price:this._readable.getPrice({blockTag:e}),numberOfTroves:this._readable.getNumberOfTroves({blockTag:e}),totalRedistributed:this._readable.getTotalRedistributed({blockTag:e}),total:this._readable.getTotal({blockTag:e}),lusdInStabilityPool:this._readable.getLUSDInStabilityPool({blockTag:e}),totalStakedLQTY:this._readable.getTotalStakedLQTY({blockTag:e}),_riskiestTroveBeforeRedistribution:this._getRiskiestTroveBeforeRedistribution({blockTag:e}),totalStakedUniTokens:this._readable.getTotalStakedUniTokens({blockTag:e}),remainingStabilityPoolLQTYReward:this._readable.getRemainingStabilityPoolLQTYReward({blockTag:e}),frontend:n?this._readable.getFrontendStatus(n,{blockTag:e}):{status:"unregistered"},...t?{accountBalance:this._provider.getBalance(t,e).then(o),lusdBalance:this._readable.getLUSDBalance(t,{blockTag:e}),lqtyBalance:this._readable.getLQTYBalance(t,{blockTag:e}),uniTokenBalance:this._readable.getUniTokenBalance(t,{blockTag:e}),uniTokenAllowance:this._readable.getUniTokenAllowance(t,{blockTag:e}),liquidityMiningStake:this._readable.getLiquidityMiningStake(t,{blockTag:e}),liquidityMiningLQTYReward:this._readable.getLiquidityMiningLQTYReward(t,{blockTag:e}),collateralSurplusBalance:this._readable.getCollateralSurplusBalance(t,{blockTag:e}),troveBeforeRedistribution:this._readable.getTroveBeforeRedistribution(t,{blockTag:e}),stabilityDeposit:this._readable.getStabilityDeposit(t,{blockTag:e}),lqtyStake:this._readable.getLQTYStake(t,{blockTag:e}),ownFrontend:this._readable.getFrontendStatus(t,{blockTag:e})}:{accountBalance:i.Decimal.ZERO,lusdBalance:i.Decimal.ZERO,lqtyBalance:i.Decimal.ZERO,uniTokenBalance:i.Decimal.ZERO,uniTokenAllowance:i.Decimal.ZERO,liquidityMiningStake:i.Decimal.ZERO,liquidityMiningLQTYReward:i.Decimal.ZERO,collateralSurplusBalance:i.Decimal.ZERO,troveBeforeRedistribution:new i.TroveWithPendingRedistribution(a.AddressZero,"nonExistent"),stabilityDeposit:new i.StabilityDeposit(i.Decimal.ZERO,i.Decimal.ZERO,i.Decimal.ZERO,i.Decimal.ZERO,a.AddressZero),lqtyStake:new i.LQTYStake,ownFrontend:{status:"unregistered"}}});return[{...p,_feesInNormalMode:d(u,!1),remainingLiquidityMiningLQTYReward:l(u)},{blockTag:e,blockTimestamp:u}]}_doStart(){this._get().then(e=>{this._loaded||this._load(...e)});const e=async e=>{const t=await this._get(e);this._loaded?this._update(...t):this._load(...t)};return this._provider.on("block",e),()=>{this._provider.off("block",e)}}_reduceExtra(e,t){var n,a;return{blockTag:null!==(n=t.blockTag)&&void 0!==n?n:e.blockTag,blockTimestamp:null!==(a=t.blockTimestamp)&&void 0!==a?a:e.blockTimestamp}}}t.BlockPolledLiquityStore=u},fd34:function(e){e.exports=JSON.parse('[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"address","name":"initialAccount","type":"address"},{"internalType":"uint256","name":"initialBalance","type":"uint256"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approveInternal","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferInternal","outputs":[],"stateMutability":"nonpayable","type":"function"}]')}}]);
//# sourceMappingURL=chunk-9894f1fe.4fa9965a.js.map